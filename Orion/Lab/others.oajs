/**
 * Description
 * @method Follow
 * @return 
 */
function Follow()
{
    var mobileObj = Orion.FindObject("enemy");
    if (mobileObj)
    {
        while (mobileObj.Exists())
        {
            if (Orion.GetDistance(mobileObj.Serial()) > 1)
            {
                Orion.OptionAlwaysRun(true);
                Orion.WalkTo(mobileObj.X(), mobileObj.Y(), mobileObj.Z(), 0);
            }
            else
            {
                Orion.Wait(100);
            }
        }
    }
}




/**
 * Description
 * @method translatePropName
 * @param {} prop
 * @return resName
 */
function translatePropName(prop)
{
    var resName;
    if (prop)
    {
        switch (prop)
        {
            case 'Air Protection':
                resName = 'Air';
                break;
            case 'Earth Protection':
                resName = 'Earth';
                break;
            case 'Fire Protection':
                resName = 'Fire';
                break;
            case 'Necro Protection':
                resName = 'Necro';
                break;
            case 'Water Protection':
                resName = 'Water';
                break;
            case 'Holy Protection':
                resName = 'Holy';
                break;
            case 'Poison Immunity':
                resName = 'Pois';
                break;
            case 'Physical Protection':
                resName = 'Phys';
                break;
            case 'Free Action':
                resName = 'Free';
                break;
            case 'Magic Immunity':
                resName = 'MImmun';
                break;
            case 'Magic Reflection':
                resName = 'MReflect';
                break;
            case 'Dexterity Bonus':
                resName = 'Dex';
                break;
            case 'Strength Bonus':
                resName = 'Str';
                break;
            case 'Intelligence Bonus':
                resName = 'Int';
                break;
            case 'Dodge Chance':
                resName = 'Dodge';
                break;
            case 'Damage Reflection':
                resName = 'DReflect';
                break;
            case 'Cast Speed':
                resName = 'Cast';
                break;
            case 'Hit Chance':
                resName = 'Hit';
                break;
        }
        //Orion.Print(resName);
    }
    return resName;
}

/**
 * Description
 * @method getCharItemsString
 * @param {} ppl
 * @return resStr
 */
function getCharItemsString(ppl)
{
    var resStr = ""
    var props = []
    var values = []
    for (i = 1; i <= 24; i++)
    {
        var item = Orion.ObjAtLayer(i, ppl.Serial());
        if (item)
        {
            item.Properties().split(/\r\n|\r|\n/).forEach(function(str)
            {
                var elems = str.match(/\s*([A-Za-z\s]+):?\s+\+?(-?\d+(\.\d+)?)%?/);
                if (elems)
                {
                    var elemName = translatePropName(elems[1]);
                    if (elemName)
                    {
                        var pIdx = props.indexOf(elemName);
                        if (pIdx == -1)
                        {
                            props.push(elemName);
                            values.push(Number(elems[2]));
                        }
                        else
                        {
                            values[pIdx] += Number(elems[2]);
                        }
                    }
                }
            })
        }
    }
    props.forEach(function(item, index, array)
    {
        values[index] = Math.round((values[index]) * 100) / 100
        //resStr += " "+item.replace(/([A-Z])[A-Za-z]+\s?/g,"$1")+":"+values[index]; 
        resStr += " " + item + ":" + values[index];
    })
    return resStr;
}

/**
 * Description
 * @method checkPrint
 * @return 
 */
function checkPrint()
{
    var pplIdxCache = [];
    var pplDataCache = [];
    while (true)
    {
        var ppls = Orion.FindTypeEx(-1, -1, "ground", "live|ignoreself|ignorefriends", 15);
        ppls.forEach(function(ppl)
        {
            pplIdx = pplIdxCache.indexOf(ppl.Serial());
            var charProps = getCharItemsString(ppl);
            if (pplIdx == -1)
            {
                pplIdxCache.push(ppl.Serial());
                pplDataCache.push(charProps);
                Orion.CharPrint(ppl.Serial(), '2119', charProps);
            }
            else if (charProps != pplDataCache[pplIdx])
            {
                pplDataCache[pplIdx] = charProps;
                Orion.CharPrint(ppl.Serial(), '33', charProps);
            }
        })
        pplIdxCache.forEach(function(item, index, array)
        {
            var obj = Orion.FindObject(item);
            if (!obj)
            {
                pplIdxCache.splice(index, 1);
                pplDataCache.splice(index, 1);
            }
        })
        Orion.Wait(1000);
    }
}

/**
 * Description
 * @method checkPrintTarget
 * @return 
 */
function checkPrintTarget()
{
    var lastPpl
    var lastData
    while (true)
    {
        var ppl = Orion.FindObject(Orion.TargetSystemSerial());
        if (ppl)
        {
            var charProps = getCharItemsString(ppl);
            if (ppl.Serial() != lastPpl)
            {
                lastPpl = ppl.Serial();
                lastData = charProps;
                Orion.CharPrint(ppl.Serial(), '2119', charProps);
            }
            else if (charProps != lastData)
            {
                lastData = charProps;
                Orion.CharPrint(ppl.Serial(), '33', charProps);
            }
        }
        else
        {
            lastPpl = ""
        }
        Orion.Wait(1000);
    }
}




/**
 * Description
 * @method CheckDress
 * @return 
 */
function CheckDress()
{
    Layers = {
        'RightHand': 'Правая рука',
        'LeftHand': 'Левая рука',
        //  'Shoes': 'Сапоги', 
        //  'Pants': 'Штаны', 
        // 'Helmet': 'Шлем',
        //  'Gloves': 'Перчатки', 
        //   'Necklace': 'Шея',
        //  'InnerTorso': 'Армор', 
        //   'Arms': 'Плечи', 
        //   'Cloak': 'Плащ', 
        //   'Robe': 'Роба', 
        //   'Shirt': 'Рубашка', 
        //   'Eggs': 'Юбка', 
        //     'MidTorso': 'Торс', 
        //   'Waist': 'Передник', 
        //   'Legs': 'Плейт штаны',
        'Talisman': 'Ожерелье',
        'Earrings': 'Серьги',
        'Bracelet': 'Браслет',
        'Ring': 'Кольцо',
    };

    DressTarget = Orion.FindObject('enemy');

    if (DressTarget != null)
    {
        for (LayerName in Layers)
        {
            Item = Orion.ObjAtLayer(LayerName, DressTarget.Serial());

            if (Item != null)
            {
                ItemProperties = Item.Properties()
                ItemName = ItemProperties.substring(0, ItemProperties.indexOf('\n'))
                Orion.Print(0x0022, Layers[LayerName] + ': ' + ItemName);
            }
            else
            {
                Orion.Print(0x0000, Layers[LayerName] + ': Пусто');
            }
        }
    }
    else
    {
        Orion.Print(0x0026, 'Цель не найдена.');
    }
}




/**
 * Description
 * @method Autostart
 * @return 
 */
function Autostart()
{
    Orion.Print('Welcome to OrionUO assistant Autostart');
}

/**
 * Description
 * @method Follow
 * @return 
 */
function Follow()
{
    var mobileObj = Orion.FindObject("enemy");
    if (mobileObj)
    {
        while (mobileObj.Exists())
        {
            if (Orion.GetDistance(mobileObj.Serial()) > 1)
            {
                Orion.OptionAlwaysRun(true);
                Orion.WalkTo(mobileObj.X(), mobileObj.Y(), mobileObj.Z(), 0);
            }
            else
            {
                Orion.Wait(100);
            }
        }
    }
}


/**
 * Description
 * @method Hidestealth
 * @return 
 */
function Hidestealth()
{
    Orion.OptionAlwaysRun(false);

    if (Player.Hidden())
    {
        Orion.UseSkill('Stealth');
    }
    else
    {
        fish = Orion.FindType(0x0DD6, 0x03E9);

        if (fish.length > 0)
        {
            Orion.Print(0x004E, 'Fish found [' + Orion.Count(0x0DD6, 0x03E9) + ']');
            Orion.UseObject(fish[0]);
        }
        else
        {
            Orion.Print(0x0026, 'Fish not found');
            Orion.WarMode(0);
            Orion.UseSkill('Hiding');
        }
    }
}


/**
 * Description
 * @method FindNearestEnemy
 * @param {} findType
 * @param {} findColor
 * @param {} findDistance
 * @param {} findNotoriety
 * @return MemberExpression
 */
function FindNearestEnemy(findType, findColor, findDistance, findNotoriety)
{

    Orion.Ignore('self');
    var friends = Orion.GetFriendList();
    for (var i = 0; i < friends.length; i++)
    {
        Orion.Ignore(friends[i]);
    }

    var enemies = Orion.FindType(findType, findColor, "ground", "near|live", findDistance, findNotoriety);
    Orion.IgnoreReset();
    if (!enemies.length) return '';
    return enemies[0];
}

/**
 * Description
 * @method checkIsAvailableEnemy
 * @param {} serial
 * @param {} distance
 * @return Literal
 */
function checkIsAvailableEnemy(serial, distance)
{
    var victim = Orion.FindObject(serial);
    if (victim == null || victim.Dead() || victim.Distance() > distance)
    {
        return false;
    }
    return true;
}

/**
 * Description
 * @method stealLastContainer
 * @param {} serial
 * @return 
 */
function stealLastContainer(serial)
{
    Orion.Wait(500);
    if (!checkIsAvailableEnemy(serial, 3))
    {
        return;
    }
    var curContainer = lastcontainer;
    var foundItems = Orion.FindTypeEx('any', 'any', curContainer);
    foundItems.forEach(function(foundItem)
    {
        if (Orion.Contains(foundItem.FullName(), 'Magic') || Orion.Contains(foundItem.Name(),
                'Magic'))
        {
            if (checkIsAvailableEnemy(serial, 3))
            {
                Orion.Print(foundItem.Serial() + ' ' + foundItem.Name());
                var startTime = Orion.Now();
                do {
                    Orion.UseObject(foundItem.Serial());
                    Orion.Wait(5500);
                } while (checkIsAvailableEnemy(serial, 3) && Orion.InJournal('successfully stolen',
                        'sys', '0', 'any', startTime) == null);
            }
        }
    });
    foundItems.forEach(function(foundItem)
    {
        if (Orion.Contains(foundItem.Properties(), 'Backpack|Bag|Pouch|Box'))
        {
            if (checkIsAvailableEnemy(serial, 3))
            {
                Orion.UseObject(foundItem.Serial());
                Orion.Wait(500);
                stealLastContainer(serial);
            }
        }
    });
}

/**
 * Description
 * @method StealEnemies
 * @return 
 */
function StealEnemies()
{
    while (true)
    {
        var serial = "enemy";
        if (serial.length)
        {
            var victimBackpackObj = Orion.ObjAtLayer('21', serial)
            if (victimBackpackObj)
            {
                var victimBackpack = victimBackpackObj.Serial();
                var startTime = Orion.Now();
                do {
                    Orion.UseObject(victimBackpack);
                    Orion.Wait(500);
                } while (checkIsAvailableEnemy(serial, 3) && Orion.InJournal('successfully peeked', 'sys',
                        '0', 'any', startTime) == null);
                if (Orion.InJournal('successfully peeked', 'sys', '0', 'any', startTime) != null)
                {
                    stealLastContainer(serial);
                }
            }
        }
        else
        {
            Orion.Wait(500);
        }
    }
}




/**
 * Description
 * @method usebag
 * @return 
 */
function usebag()
{
    Orion.Cast('Horrific Beast');
    Orion.Wait(1000);

}

/**
 * Description
 * @method TargetMageHunter
 * @return 
 */
function TargetMageHunter()
{
    Orion.Ignore(self, true);

    var victim = Orion.FindType("0x023E", "-1", ground, "near|live|ignorefriends", 12, 'red')[0];
    if (victim != null)
    {
        Orion.ClientLastAttack(victim);
        Orion.AddObject('victim', victim)
        Orion.AddObject('enemy', victim)
        var vicObj = Orion.FindObject(victim);
        Orion.CharPrint(self, 33, vicObj.Name())
        Orion.Ignore(victim);
        var friends = Orion.GetFriendList();
        for (var i = 0; i < friends.length; i++)
            Orion.Ignore(friends[i]);


    }
    else
    {
        Orion.CharPrint(self, 10, "no mage hunter");
        Orion.IgnoreReset();
    }

    Orion.Ignore(self, false);


    Orion.Attack('victim');
}

/**
 * Description
 * @method castnecro
 * @return 
 */
function castnecro()
{
    Orion.Cast('Horrific Beast');
    Orion.Wait(1000);

}

/**
 * Description
 * @method AutoLoothunt
 * @return 
 */
function AutoLoothunt()
{
    while (true)
    {
        if (Player.Dead())
        {
            Orion.Wait(50);
            continue;
        }
        var corpses = Orion.FindType('0x2006', '-1', ground, '', 'usedistance');
        for (var c = 0; c < corpses.length; c++)
        {
            var serial = corpses[c]
            Orion.WaitTargetObject(serial);
            Orion.UseType('reaper');
            Orion.Wait(50);
            Orion.UseObject(serial);
            Orion.Wait(50);

            var list = Orion.FindList('huntloot', serial);
            Orion.ResetIgnoreList();
            for (var i = 0; i < list.length; i++)
            {
                Orion.MoveItem(list[i], 0, 'huntbackpack');
                Orion.Wait('moveitemdelay');
            }
            Orion.Ignore(serial);
            Orion.Wait(50);
        }
        Orion.Wait(50);
    }
}

/**
 * Description
 * @method newBushido
 * @return 
 */
function newBushido()
{
    // Maintainer Slavsholld
    // Скрипт по прокачке бушидо, не забудь купить минимальный скилл у учителя.

    var goodEvasion = 'You feel that you might be able to deflect any attack!';
    var skillValue = Orion.SkillValue('bushido', 'real');
    var skillValueGoal = 1000;

    while (skillValue < skillValueGoal)
    {
        if (!Player.Dead())
        {

            //Confiedence
            if (skillValue < 600)
            {
                Orion.Cast('Confidence');
                Orion.Wait(3000);
            }

            //Counter Attack
            if (skillValue < 750)
            {
                Orion.Cast('Counter Attack');
                Orion.Wait(3000);
            }

            //Evasion
            if (skillValue > 750)
            {
                Orion.Cast('Evasion');
                if (Orion.InJournal(goodEvasion))
                {
                    Orion.ClearJournal();
                    Orion.Wait(23500);
                }
                else
                {
                    Orion.Wait(1500);
                }
            }
        }
    }
}

/**
 * Description
 * @method tamelast
 * @return 
 */
function tamelast()
{
    Orion.UseSkill('animal taming');
    Orion.WaitTargetObject('enemy');
}

/**
 * Description
 * @method MomentumStrike
 * @return 
 */
function MomentumStrike()
{
    // Maintainer Slavsholld
    // Minimum Skill - 70.0
    // Использовать в купе с newBushido на стадии - evasion. Умение срабатывает только при атаке.

    while (!Player.Dead())
    {
        if (!Orion.BuffExists('0x75fb'))
        {
            Orion.Cast('Momentum Strike');
            Orion.Wait(500);
        }
    }
}

/**
 * Description
 * @method trainNecromancy
 * @return 
 */
function trainNecromancy()
{
    const castSpellDelay = 1000;
    const skillValueGoal = 1000;
    const target = Player.Serial();
    const useSkillDelay = 1250;
    var skillValue = Orion.SkillValue('necromancy', 'real');

    circuitBreaker(skillValue);

    while (skillValue < skillValueGoal)
    {
        if (skillValue < 1330)
            var spell = 'Lich Form';
        else if (skillValue < 900)
            var spell = 'Poison';
        else
            var spell = 'Earthquake';
        while (Player.Mana() < 0)
        {
            var meditating = false;
            while (!meditating)
            {
                Orion.ClearJournal();
                Orion.UseSkill('meditation');
                Orion.Wait(250);
                if (Orion.InJournal('You cannot focus your concentration|You stop meditating'))
                    Orion.Wait(useSkillDelay);
                else
                    var meditating = true;
            }
            Orion.WaitJournal('You are at peace', 0, Orion.Now() + 60000);
        }

        Orion.Cast(spell, target);
        Orion.Wait(castSpellDelay);

        skillValue = Orion.SkillValue('Necromancy', 'real');
    }
}

/**
 * Description
 * @method circuitBreaker
 * @param {} skillValue
 * @return 
 */
function circuitBreaker(skillValue)
{
    if (skillValue < 450)
    {
        Orion.Print('[Error] trainMagery: Train skill to 45.0 before proceeding.');
        Orion.Terminate('trainMagery');
    }
}

/////




/**
 * Description
 * @method trainMagery
 * @return 
 */
function trainMagery()
{
    const castSpellDelay = 1000;
    const skillValueGoal = 1000;
    const target = Player.Serial();
    const useSkillDelay = 1250;
    var skillValue = Orion.SkillValue('magery', 'real');

    circuitBreaker(skillValue);

    while (skillValue < skillValueGoal)
    {
        if (skillValue < 550)
            var spell = 'Magic Reflection';
        else if (skillValue < 900)
            var spell = 'Mass Dispel';
        else
            var spell = 'Earthquake';
        while (Player.Mana() < 30)
        {
            var meditating = false;
            while (!meditating)
            {
                Orion.ClearJournal();
                Orion.UseSkill('meditation');
                Orion.Wait(250);
                if (Orion.InJournal('You cannot focus your concentration|You stop meditating'))
                    Orion.Wait(useSkillDelay);
                else
                    var meditating = true;
            }
            Orion.WaitJournal('You are at peace', 0, Orion.Now() + 60000);
        }

        Orion.Cast(spell, target);
        Orion.Wait(castSpellDelay);

        skillValue = Orion.SkillValue('magery', 'real');
    }
}

/**
 * Description
 * @method circuitBreaker
 * @param {} skillValue
 * @return 
 */
function circuitBreaker(skillValue)
{
    if (skillValue < 450)
    {
        Orion.Print('[Error] trainMagery: Train skill to 45.0 before proceeding.');
        Orion.Terminate('trainMagery');
    }
}

/////




/**
 * Description
 * @method undress
 * @return 
 */
function undress()
{
    Orion.Unequip('RightHand'); // правая рука
    Orion.Unequip('LeftHand'); // левая рука
    Orion.Unequip('Shoes'); //сапоги
    Orion.Unequip('Pants'); // штаны
    Orion.Unequip('Helmet');
    Orion.Unequip('Gloves');
    Orion.Unequip('Ring');
    Orion.Unequip('Necklace');
    Orion.Unequip('InnerTorso');
    Orion.Unequip('Bracelet');
    Orion.Unequip('Arms');
    Orion.Unequip('Cloak');
    Orion.Unequip('Robe');
    Orion.Unequip('Shirt');
    Orion.Unequip('Eggs');
    Orion.Unequip('Earrings');
    Orion.Unequip('MidTorso');
    Orion.Unequip('Waist');
    Orion.Unequip('Legs');
    Orion.Unequip('Talisman');
    Orion.Wait(0);
}



/**
 * Description
 * @method EmptyContainer2
 * @return 
 */
function EmptyContainer2()
{
    Orion.Print("Where is Loot Bag?");
    Orion.AddObject("temp");

    while (Orion.HaveTarget())
    {
        Orion.Wait(100);
    }

    Orion.OpenContainer("temp");

    var itemIDArr = Orion.FindList("itemlist|lootlist", "temp");

    Orion.Print(itemIDArr.length + " items found");

    for (var ind = 0; ind < itemIDArr.length; ind++)
    {
        Orion.MoveItem(itemIDArr[ind], 0, "LootBag");
        Orion.Wait(350);
    }

    Orion.Print("Looting finished");
}

/**
 * Description
 * @method canceltarget
 * @return 
 */
function canceltarget()
{
    Orion.CancelWaitTarget();
}




/**
 * Description
 * @method dress
 * @return 
 */
function dress()
{
    Orion.Unequip('Shoes'); //сапоги
    Orion.Unequip('Pants'); // штаны
    Orion.Unequip('Helmet');
    Orion.Unequip('Gloves');
    Orion.Unequip('Ring');
    Orion.Unequip('Necklace');
    Orion.Unequip('InnerTorso');
    Orion.Unequip('Bracelet');
    Orion.Unequip('Arms');
    Orion.Unequip('Cloak');
    Orion.Unequip('Robe');
    Orion.Unequip('Shirt');
    Orion.Unequip('Eggs');
    Orion.Unequip('Earrings');
    Orion.Unequip('MidTorso');
    Orion.Unequip('Waist');
    Orion.Unequip('Legs');
    Orion.Unequip('Talisman');
    Orion.Wait(300);
    Orion.Equip('myshoes'); //сапоги
    Orion.Equip('myshirt');
    Orion.Equip('3');
    Orion.Equip('5');
    Orion.Wait(0);
}




/**
 * Description
 * @method dressthief
 * @return 
 */
function dressthief()
{
    Orion.Unequip('Shoes'); //сапоги
    Orion.Unequip('Pants'); // штаны
    Orion.Unequip('Helmet');
    Orion.Unequip('Gloves');
    Orion.Unequip('Ring');
    Orion.Unequip('Necklace');
    Orion.Unequip('InnerTorso');
    Orion.Unequip('Bracelet');
    Orion.Unequip('Arms');
    Orion.Unequip('Cloak');
    Orion.Unequip('Robe');
    Orion.Unequip('Shirt');
    Orion.Unequip('Eggs');
    Orion.Unequip('Earrings');
    Orion.Unequip('MidTorso');
    Orion.Unequip('Waist');
    Orion.Unequip('Legs');
    Orion.Unequip('Talisman');
    Orion.Wait(300);
    Orion.Equip('setShoes'); //сапоги
    Orion.Equip('setPants'); // штаны
    Orion.Equip('setHelmet'); // Шлем
    Orion.Equip('setGloves'); // перчатки
    Orion.Equip('setRing'); // кольцо
    Orion.Equip('setNecklace'); // шея ожерелье
    Orion.Equip('setInnerTorso'); // пузо
    Orion.Equip('setBracelet'); // браслет
    Orion.Equip('setArms'); // плечи
    Orion.Equip('setCloak'); // плащ
    Orion.Equip('setRobe'); // роба
    Orion.Equip('setShirt'); // рубашка низ
    Orion.Equip('setEggs'); // юбка из кожи
    Orion.Equip('setEarrings'); // сережки
    Orion.Equip('setmidtorso'); // верхняя рубашка
    Orion.Equip('setWaist'); // халфапрон
    Orion.Equip('setgorget'); // горгетка
    Orion.Equip('setmask'); // горгетка
    Orion.Equip('setlegs'); // горгетка
    Orion.Wait(0);
}


/**
 * Description
 * @method dressthief2
 * @return 
 */
function dressthief2()
{
    Orion.Unequip('Shoes'); //сапоги
    Orion.Unequip('Pants'); // штаны
    Orion.Unequip('Helmet');
    Orion.Unequip('Gloves');
    Orion.Unequip('Ring');
    Orion.Unequip('Necklace');
    Orion.Unequip('InnerTorso');
    Orion.Unequip('Bracelet');
    Orion.Unequip('Arms');
    Orion.Unequip('Cloak');
    Orion.Unequip('Robe');
    Orion.Unequip('Shirt');
    Orion.Unequip('Eggs');
    Orion.Unequip('Earrings');
    Orion.Unequip('MidTorso');
    Orion.Unequip('Waist');
    Orion.Unequip('Legs');
    Orion.Unequip('Talisman');
    Orion.Wait(300);
    Orion.Equip('ThiefShoes'); //сапоги
    Orion.Equip('ThiefPants'); // штаны
    Orion.Equip('ThiefHelmet'); // Шлем
    Orion.Equip('ThiefGloves'); // перчатки
    Orion.Equip('setRing'); // кольцо
    Orion.Equip('setNecklace'); // шея ожерелье
    Orion.Equip('ThiefInnerTorso'); // пузо
    Orion.Equip('setBracelet'); // браслет
    Orion.Equip('ThiefArms'); // плечи
    Orion.Equip('ThiefCloak'); // плащ
    Orion.Equip('setRobe'); // роба
    Orion.Equip('ThiefShirt'); // рубашка низ
    Orion.Equip('ThiefEggs'); // юбка из кожи
    Orion.Equip('setEarrings'); // сережки
    Orion.Equip('setmidtorso'); // верхняя рубашка
    Orion.Equip('ThiefWaist'); // халфапрон
    Orion.Equip('Thiefgorget'); // горгетка

    Orion.Equip('Thieflegs'); // горгетка
    Orion.Wait(0);
}

/**
 * Description
 * @method dressppmag
 * @return 
 */
function dressppmag()
{
    Orion.Unequip('RightHand'); // правая рука
    Orion.Unequip('LeftHand'); // левая рука
    Orion.Unequip('Shoes'); //сапоги
    Orion.Unequip('Pants'); // штаны
    Orion.Unequip('Helmet');
    Orion.Unequip('Gloves');
    Orion.Unequip('Ring');
    Orion.Unequip('Necklace');
    Orion.Unequip('InnerTorso');
    Orion.Unequip('Bracelet');
    Orion.Unequip('Arms');
    Orion.Unequip('Cloak');
    Orion.Unequip('Robe');
    Orion.Unequip('Shirt');
    Orion.Unequip('Eggs');
    Orion.Unequip('Earrings');
    Orion.Unequip('MidTorso');
    Orion.Unequip('Waist');
    Orion.Unequip('Legs');
    Orion.Unequip('Talisman');
    Orion.Wait(500);
    Orion.Equip('setShoes2'); //сапоги
    Orion.Equip('setPants2'); // штаны
    Orion.Equip('setHelmet2'); // Шлем
    Orion.Equip('setGloves2'); // перчатки
    Orion.Equip('setRingmag'); // кольцо
    Orion.Equip('setNecklacemag'); // шея ожерелье
    Orion.Equip('setInnerTorso2'); // пузо
    Orion.Equip('setBraceletmag'); // браслет
    Orion.Equip('setArms2'); // плечи
    Orion.Equip('setCloak2'); // плащ
    Orion.Equip('setRobe2'); // роба
    Orion.Equip('setShirt2'); // рубашка низ
    Orion.Equip('setEggs2'); // юбка из кожи
    Orion.Equip('setEarringsmag'); // сережки
    Orion.Equip('setmidtorso2'); // верхняя рубашка
    Orion.Equip('setWaist2'); // халфапрон
    Orion.Equip('setgorget2'); // 
    Orion.Equip('setmask2'); // 
    Orion.Equip('setlegs2'); //

    Orion.Wait(0);
}




/**
 * Description
 * @method dress2
 * @return 
 */
function dress2()
{

    Orion.Equip('v1'); //сапоги
    Orion.Equip('v2'); // штаны
    Orion.Equip('v3'); // Шлем
    Orion.Equip('v4'); // перчатки
    Orion.Equip('v5'); // кольцо
    Orion.Equip('v6'); // шея ожерелье
    Orion.Equip('v7'); // пузо
    Orion.Equip('v8'); // браслет
    Orion.Equip('v9'); // плечи
    Orion.Equip('v10'); // плащ
    Orion.Equip('v11'); // роба
    Orion.Equip('v12'); // рубашка низ
    Orion.Equip('v13'); // юбка из кожи
    Orion.Equip('v14'); // сережки
    Orion.Equip('v15'); // верхняя рубашка
    Orion.Equip('v16'); // халфапрон
    Orion.Equip('v17'); // горгетка
    Orion.Equip('v18'); // горгетка
    Orion.Equip('v19'); // горгетка
    Orion.Equip('v20'); // горгетка
    Orion.Wait(0);
}



/**
 * Description
 * @method dress3
 * @return 
 */
function dress3()
{

    Orion.Equip('b1'); //сапоги
    Orion.Equip('b2'); // штаны
    Orion.Equip('b3'); // Шлем
    Orion.Equip('b4'); // перчатки
    Orion.Equip('b5'); // кольцо
    Orion.Equip('b6'); // шея ожерелье
    Orion.Equip('b7'); // пузо
    Orion.Equip('b8'); // браслет
    Orion.Equip('b9'); // плечи
    Orion.Equip('b10'); // плащ

    Orion.Wait(0);
}

/**
 * Description
 * @method dressAccessories
 * @return 
 */
function dressAccessories()
{

    Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    Orion.Unequip('Bracelet');
    Orion.Unequip('Earrings');
    Orion.Unequip('Talisman');
    Orion.Wait(350);
    Orion.Equip('setBracelet'); // браслет
    Orion.Equip('setRing'); // кольцо
    Orion.Equip('setEarrings'); // сережки
    Orion.Equip('setNecklace'); // шея ожерелье
    Orion.Wait(0);
}

/**
 * Description
 * @method testdress2
 * @return 
 */
function testdress2()
{

    Orion.Unequip('Bracelet');
    Orion.Unequip('Earrings');
    Orion.Unequip('Ring');
    Orion.Unequip('Talisman'); // 
    Orion.Wait(350);
    Orion.Equip('1');
    Orion.Equip('2');
    Orion.Equip('3');
    Orion.Equip('4');
}




/**
 * Description
 * @method dressAccessoriesthief
 * @return 
 */
function dressAccessoriesthief()
{

    Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    //Orion.Unequip('Bracelet');
    Orion.Unequip('Earrings');
    //Orion.Unequip('Talisman');
    Orion.Wait(350);
    //Orion.Equip('setBracelet'); // браслет
    Orion.Equip('setRingt3'); // кольцо
    Orion.Equip('setEarringst3'); // сережки
    //Orion.Equip('setNecklace'); // шея ожерелье
    Orion.Wait(0);
}

/**
 * Description
 * @method dressAccessoriesthief2
 * @return 
 */
function dressAccessoriesthief2()
{

    Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    //Orion.Unequip('Bracelet');
    //Orion.Unequip('Earrings');
    //Orion.Unequip('Talisman');
    Orion.Wait(350);
    //Orion.Equip('setBracelet'); // браслет
    Orion.Equip('setRingt4'); // кольцо
    //Orion.Equip('setEarringst3'); // сережки
    //Orion.Equip('setNecklace'); // шея ожерелье
    Orion.Wait(0);
}

/**
 * Description
 * @method dressAccessoriesthief3
 * @return 
 */
function dressAccessoriesthief3()
{

    Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    //Orion.Unequip('Bracelet');
    //Orion.Unequip('Earrings');
    //Orion.Unequip('Talisman');
    Orion.Wait(350);
    //Orion.Equip('setBracelet'); // браслет
    Orion.Equip('setRingt5'); // кольцо
    //Orion.Equip('setEarringst3'); // сережки
    //Orion.Equip('setNecklace'); // шея ожерелье
    Orion.Wait(0);
}

/**
 * Description
 * @method dressAccessoriesthief4
 * @return 
 */
function dressAccessoriesthief4()
{

    Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    //Orion.Unequip('Bracelet');
    //Orion.Unequip('Earrings');
    //Orion.Unequip('Talisman');
    Orion.Wait(350);
    //Orion.Equip('setBracelet'); // браслет
    Orion.Equip('setRingt6'); // кольцо
    //Orion.Equip('setEarringst3'); // сережки
    //Orion.Equip('setNecklace'); // шея ожерелье
    Orion.Wait(0);
}

/**
 * Description
 * @method dressAccessoriesthief5
 * @return 
 */
function dressAccessoriesthief5()
{

    Orion.Unequip('Ring');
    Orion.Unequip('Necklace');
    Orion.Unequip('Bracelet');
    Orion.Unequip('Earrings');
    Orion.Unequip('Talisman');
    Orion.Wait(350);
    Orion.Equip('setfiz'); // браслет
    Orion.Equip('setfiz2'); // кольцо
    Orion.Equip('setfiz3'); // сережки
    Orion.Equip('setfiz4'); // шея ожерелье
    Orion.Wait(0);
}

/**
 * Description
 * @method dressAccessoriesppp
 * @return 
 */
function dressAccessoriesppp()
{

    //Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    //Orion.Unequip('Bracelet');
    Orion.Unequip('Earrings');
    //Orion.Unequip('Talisman');
    Orion.Wait(350);
    //Orion.Equip('setBracelet'); // браслет
    //Orion.Equip('setRing'); // кольцо
    Orion.Equip('setEarrings'); // сережки
    //Orion.Equip('setNecklace'); // шея ожерелье
    Orion.Wait(0);
}



/**
 * Description
 * @method dressAccessories2
 * @return 
 */
function dressAccessories2()
{

    //Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    Orion.Unequip('Bracelet');
    Orion.Unequip('Earrings');
    Orion.Wait(350);
    Orion.Equip('setBracelet2'); // браслет
    //Orion.Equip('setRing'); // кольцо
    Orion.Equip('setEarrings2'); // сережки
    //Orion.Equip('setNecklace'); // шея ожерелье
    Orion.Wait(0);
}


/**
 * Description
 * @method dressAccessories2m
 * @return 
 */
function dressAccessories2m()
{

    //Orion.Unequip('Ring');
    Orion.Unequip('Talisman');
    //Orion.Unequip('Bracelet');
    Orion.Unequip('Earrings');
    Orion.Wait(350);
    //Orion.Equip('setBracelet2'); // браслет
    //Orion.Equip('setRing'); // кольцо
    Orion.Equip('setearr'); // сережки
    Orion.Equip('setneck'); // шея ожерелье
    Orion.Wait(0);
}



/**
 * Description
 * @method dressAccessories3m
 * @return 
 */
function dressAccessories3m()
{

    //Orion.Unequip('Ring');
    Orion.Unequip('Talisman');
    //Orion.Unequip('Bracelet');
    Orion.Unequip('Earrings');
    Orion.Wait(350);
    //Orion.Equip('setBracelet2'); // браслет
    //Orion.Equip('setRing'); // кольцо
    Orion.Equip('setearr2'); // сережки
    Orion.Equip('setneck2'); // шея ожерелье
    Orion.Wait(0);
}

/**
 * Description
 * @method wep1
 * @return 
 */
function wep1() //dlya varki
{
    Orion.Unequip('RightHand');
    Orion.Unequip('LeftHand');
    Orion.Wait(100);
    Orion.Equip('arm1'); // id wapona1
    Orion.Wait(100);
    Orion.Equip('shitwarka'); // id shita
    //Orion.Equip('');  // id shita
    //Orion.Wait(0);
    Orion.Wait(0);
}

/**
 * Description
 * @method Disarm
 * @return 
 */
function Disarm()
{
    Orion.Unequip('RightHand');
    Orion.Unequip('LeftHand');
}

/**
 * Description
 * @method wep2
 * @return 
 */
function wep2() //dlya varki
{
    Orion.Unequip('RightHand');
    Orion.Unequip('LeftHand');
    Orion.Equip('wep2'); // id wapona2
    Orion.Equip('shitwarka'); // id shita
    Orion.Wait(0);
}

/**
 * Description
 * @method wep3
 * @return 
 */
function wep3()
{
    Orion.Unequip('RightHand');
    Orion.Equip('armpoison'); // id spear
    Orion.Wait(0);
}

/**
 * Description
 * @method wep4
 * @return 
 */
function wep4()
{
    Orion.Unequip('RightHand');
    Orion.Equip('armassasin'); // id spear
    Orion.Wait(0);
}

/**
 * Description
 * @method wepassasinteleport
 * @return 
 */
function wepassasinteleport()
{
    Orion.Unequip('RightHand');
    Orion.Wait(100);
    Orion.Cast('Teleport');
    Orion.Wait(200);
    Orion.Equip('armassasin'); // id spear
    Orion.Wait(0);
}



/**
 * Description
 * @method wep4telep
 * @return 
 */
function wep4telep()
{

    Orion.Unequip('RightHand');
    Orion.Wait(100);
    Orion.Cast('Teleport');
    Orion.Wait(200);
    Orion.Equip('arm2');

    Orion.Wait(0);
}

/**
 * Description
 * @method wep5
 * @return 
 */
function wep5()
{
    Orion.Unequip('RightHand');
    Orion.Unequip('LeftHand');
    Orion.Wait(100);
    Orion.Equip('arm5'); // id wapona1
    Orion.Wait(100);
    Orion.Equip('shitwarka'); // id shita
    //Orion.Equip('');  // id shita
    //Orion.Wait(0);
}

/**
 * Description
 * @method wep6
 * @return 
 */
function wep6()
{
    Orion.Unequip('RightHand');
    Orion.Unequip('LeftHand');
    Orion.Wait(300);
    Orion.Equip('arm6'); // id wapona1
    Orion.Wait(100);
    Orion.Equip('shitwarka'); // id shita
    Orion.Wait(0);
}


/**
 * Description
 * @method wepmagbrok
 * @return 
 */
function wepmagbrok()
{
    Orion.Unequip('RightHand');
    Orion.Unequip('LeftHand');
    Orion.Wait(300);
    Orion.Equip('armbrok'); // id wapona1
    Orion.Wait(100);

}

/**
 * Description
 * @method wep7
 * @return 
 */
function wep7()
{
    Orion.Unequip('RightHand');
    Orion.Unequip('LeftHand');
    Orion.Wait(100);
    Orion.Equip('arm6'); // id wapona1
    Orion.Equip(''); // id shita
    Orion.Wait(0);
}

/**
 * Description
 * @method wep1telep
 * @return 
 */
function wep1telep()
{

    Orion.Unequip('RightHand');
    Orion.Unequip('LeftHand');
    Orion.Wait(100);
    Orion.Cast('Teleport');
    Orion.Wait(200);
    Orion.Equip('arm1');
}

/**
 * Description
 * @method disarmteleport
 * @return 
 */
function disarmteleport()
{
    Orion.Unequip('RightHand');
    Orion.Unequip('LeftHand');
    Orion.Wait(100);
    Orion.Cast('Teleport');
    Orion.Wait(100);
    Orion.Equip('arm1');
    Orion.Wait(1800);
    Orion.BlockMoving(true);
    Orion.Wait(350);
    Orion.WaitTargetObject('enemy');
    Orion.BlockMoving(false);

}



/**
 * Description
 * @method telelastt
 * @return 
 */
function telelastt()
{
    Orion.Cast('Teleport');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(1900);
    Orion.BlockMoving(true);
    Orion.Wait(350);
    Orion.WaitTargetObject('enemy');
    Orion.BlockMoving(false);

}


/**
 * Description
 * @method horsed
 * @return 
 */
function horsed()
{
    Orion.Say(".cast 156");
    Orion.WaitTargetObject('enemy');
}

/**
 * Description
 * @method bshild
 * @return 
 */
function bshild()
{
    Orion.Say(".cast 151");

}

/**
 * Description
 * @method bphis
 * @return 
 */
function bphis()
{
    Orion.Say(".cast 154");

}

/**
 * Description
 * @method bregen
 * @return 
 */
function bregen()
{
    Orion.Say(".cast 152");

}

/**
 * Description
 * @method bweak
 * @return 
 */
function bweak()
{
    Orion.Say(".cast 157");
    Orion.WaitTargetObject('enemy');
}

/**
 * Description
 * @method bparal
 * @return 
 */
function bparal()
{
    Orion.Say(".cast 155");

}

/**
 * Description
 * @method mregen
 * @return 
 */
function mregen()
{
    Orion.Say(".cast 159");

}

/**
 * Description
 * @method bmassheal
 * @return 
 */
function bmassheal()
{
    Orion.Say(".cast 160");

}


/**
 * Description
 * @method bmassheal2
 * @return 
 */
function bmassheal2()
{
    Orion.Say(".cast 158");

}

/**
 * Description
 * @method Shift
 * @return 
 */
function Shift()
{
    //Orion.Say(".scast shift");
    Orion.Say(".cast 83");
    Orion.WaitTargetObject('enemy');
}


/**
 * Description
 * @method Kill
 * @return 
 */
function Kill()
{
    //Orion.Say(".scast kill");
    Orion.Say(".cast 77");
    Orion.WaitTargetObject('enemy');
}

/**
 * Description
 * @method wraith
 * @return 
 */
function wraith()
{
    //Orion.Say(".scast wbreath");
    Orion.Say(".cast 72");
}

/**
 * Description
 * @method eheal
 * @return 
 */
function eheal()
{
    //Orion.Say(".scast eheal");
    Orion.Say(".cast 88");
    Orion.WaitTargetObject('enemy');
    //Orion.WaitTargetObject('self');

}

/**
 * Description
 * @method wyvern
 * @return 
 */
function wyvern()
{
    Orion.Say(".cast 76");
    Orion.WaitTargetObject('enemy');
}

/**
 * Description
 * @method abyss
 * @return 
 */
function abyss()
{
    Orion.Say(".cast 90");
    Orion.WaitTargetObject('enemy');
}


/**
 * Description
 * @method Clight
 * @return 
 */
function Clight()
{
    Orion.Say(".scast clighting");
    //Orion.Say(".cast 85");
    Orion.WaitTargetObject('enemy');
}

/**
 * Description
 * @method Gust
 * @return 
 */
function Gust()
{
    Orion.Say(".cast 89");
    //Orion.Say(".scast gustofair");
    Orion.WaitTargetObject('enemy');
}

/**
 * Description
 * @method sorc
 * @return 
 */
function sorc()
{
    Orion.Say(".cast 73");
    //Orion.Say(".scast sbane");
    Orion.WaitTargetObject('enemy');
}


/**
 * Description
 * @method Icestrike
 * @return 
 */
function Icestrike()
{
    //Orion.Say(".scast icestrike");
    Orion.Say(".cast 92");
    Orion.WaitTargetObject('enemy');
}

/**
 * Description
 * @method ebless
 * @return 
 */
function ebless()
{
    //Orion.Say(".scast ebless");
    Orion.Say(".cast 86");
}

/**
 * Description
 * @method eshape
 * @return 
 */
function eshape()
{
    Orion.Say(".scast shapeshift");
    //Orion.Say(".cast 91");
}

/**
 * Description
 * @method nliche
 * @return 
 */
function nliche()
{

    Orion.Say(".cast 78");
}


/**
 * Description
 * @method ecure
 * @return 
 */
function ecure()
{
    Orion.Say(".scast shapeshift");
    //Orion.Say(".cast 81");
    Orion.WaitTargetObject('self');
}


/**
 * Description
 * @method poiswep
 * @return 
 */
function poiswep()
{
    Orion.UseSkill('Poisoning');
    Orion.Wait(100);
    Orion.WaitTargetType('0x0F0A');
    Orion.Wait(100);
    Orion.WaitTargetObject('arm1');
}

/**
 * Description
 * @method DisarmRightHand
 * @return 
 */
function DisarmRightHand()
{ //this is a sub-function for clearing left hand if needed before drinking a potion
    var Rhand = Orion.ObjAtLayer('2');
    if (Rhand !== null)
    {
        Orion.Print('disarming right hand');
        Orion.MoveItem(Rhand.Serial(), 'all', 'dressbag');
        Orion.Wait(50);
    }
    else
    {
        Orion.Print('nothing in right hand to disarm.');
    }
}

/**
 * Description
 * @method DisarmLeftHand
 * @return 
 */
function DisarmLeftHand()
{ //this is a sub-function for clearing left hand if needed before drinking a potion
    var Lhand = Orion.ObjAtLayer('1');
    if (Lhand !== null)
    {
        Orion.Print('disarming left hand');
        Orion.MoveItem(Lhand.Serial(), 'all', 'dressbag');
        Orion.Wait(50);
    }
    else
    {
        Orion.Print('nothing in left hand to disarm.');
    }
}




/**
 * Description
 * @method ppparm
 * @return 
 */
function ppparm()
{


    Orion.Equip('pp1'); // id wapona1
    Orion.Equip('ppshit'); // id shita
}


/**
 * Description
 * @method testarm
 * @return 
 */
function testarm() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp1'); //Здесь указываем ИД первого оружия.
    Orion.Wait(50);
    Orion.Equip('ppshit'); // Здесь указываем щит.
    Orion.Wait(50);
    Orion.Equip('pp1'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}


/**
 * Description
 * @method testarm2
 * @return 
 */
function testarm2() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp2'); //Здесь указываем ИД первого оружия.
    Orion.Wait(50);
    Orion.Equip('ppshit'); // Здесь указываем щит.
    Orion.Wait(50);
    Orion.Equip('pp2'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm
 * @return 
 */
function pparm() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp1'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp1'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}


/**
 * Description
 * @method pparm2
 * @return 
 */
function pparm2() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp2'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp2'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm3
 * @return 
 */
function pparm3() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp3'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp3'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm4
 * @return 
 */
function pparm4() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp4'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp4'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}


/**
 * Description
 * @method pparm5
 * @return 
 */
function pparm5() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp5'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp5'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm6
 * @return 
 */
function pparm6() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp6'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp6'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm7
 * @return 
 */
function pparm7() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp7'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp7'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm8
 * @return 
 */
function pparm8() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp8'); // id wapona1
    Orion.Wait(50);
    //Orion.Equip('ppshit');  // id shita
    Orion.Wait(50);
    Orion.Equip('pp8'); // id wapona1
    Orion.Wait(50);
    //Orion.Equip('ppshit');  // id shita
    Orion.Wait(50);
}


/**
 * Description
 * @method pparm9
 * @return 
 */
function pparm9() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp9'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp9'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm10
 * @return 
 */
function pparm10() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp10'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp10'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm11
 * @return 
 */
function pparm11() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp11'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp11'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm12
 * @return 
 */
function pparm12() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp12'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp12'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm13
 * @return 
 */
function pparm13() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp13'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp13'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm14
 * @return 
 */
function pparm14() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp14'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp14'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}


/**
 * Description
 * @method pparm15
 * @return 
 */
function pparm15() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp15'); // id wapona1
    Orion.Wait(50);

    Orion.Equip('pp15'); // id wapona1
    Orion.Wait(50);

}

/**
 * Description
 * @method pparm16
 * @return 
 */
function pparm16() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp16'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp16'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm17
 * @return 
 */
function pparm17() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp17'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp17'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}


/**
 * Description
 * @method pparm18
 * @return 
 */
function pparm18() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp18'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp18'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}



/**
 * Description
 * @method pparm20
 * @return 
 */
function pparm20() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp20'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp20'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}


/**
 * Description
 * @method pparm21
 * @return 
 */
function pparm21() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp21'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp21'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm22
 * @return 
 */
function pparm22() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp22'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp22'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}


/**
 * Description
 * @method pparm23
 * @return 
 */
function pparm23() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp23'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp23'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
}

/**
 * Description
 * @method pparm24
 * @return 
 */
function pparm24() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp24'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('pp24'); // id wapona1
    Orion.Wait(50);

}



/**
 * Description
 * @method pparm25
 * @return 
 */
function pparm25() //dlya varki
{
    DisarmRightHand();
    DisarmLeftHand();
    Orion.Wait(50);
    Orion.Equip('pp25'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);
    Orion.Equip('pp25'); // id wapona1
    Orion.Wait(50);
    Orion.Equip('ppshit'); // id shita
    Orion.Wait(50);

}




/**
 * Description
 * @method ppdressfreac
 * @return 
 */
function ppdressfreac()
{

    Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    Orion.Unequip('Bracelet');
    //Orion.Unequip('Earrings');
    Orion.Unequip('Talisman');
    Orion.Wait(350);
    Orion.Equip('setBracelet'); // браслет
    Orion.Equip('setRing'); // кольцо
    //Orion.Equip('setEarrings'); // сережки
    Orion.Equip('setnecklace'); // шея ожерелье
    Orion.Wait(0);
}

/**
 * Description
 * @method ppdresspoison
 * @return 
 */
function ppdresspoison()
{

    Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    Orion.Unequip('Bracelet');
    //Orion.Unequip('Earrings');
    Orion.Unequip('Talisman');
    Orion.Wait(350);
    Orion.Equip('ppBracPoison'); // браслет
    Orion.Equip('setRing'); // кольцо
    //Orion.Equip('setEarrings'); // сережки
    Orion.Equip('ppNeckPoison'); // шея ожерелье
    Orion.Wait(0);
}

/**
 * Description
 * @method ppdressflaw
 * @return 
 */
function ppdressflaw()
{

    Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    Orion.Unequip('Bracelet');
    //Orion.Unequip('Earrings');
    Orion.Unequip('Talisman');
    Orion.Wait(350);
    Orion.Equip('setBracelettemp'); // браслет
    Orion.Equip('setRing'); // кольцо
    //Orion.Equip('ppEarringFlaw'); // сережки
    Orion.Equip('setNecklacetemp'); // шея ожерелье
    Orion.Wait(0);
}


/**
 * Description
 * @method ppdressflaw2
 * @return 
 */
function ppdressflaw2()
{

    Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    Orion.Unequip('Bracelet');
    //Orion.Unequip('Earrings');
    Orion.Unequip('Talisman');
    Orion.Wait(350);
    Orion.Equip('setBracelettemp'); // браслет
    Orion.Equip('ppRingtemp'); // кольцо
    //Orion.Equip('ppEarringFlaw'); // сережки
    Orion.Equip('setNecklacetemp'); // шея ожерелье
    Orion.Wait(0);
}

/**
 * Description
 * @method ppdresstemp
 * @return 
 */
function ppdresstemp()
{

    //Orion.Unequip('Ring');
    //Orion.Unequip('Necklace');
    Orion.Unequip('Bracelet');
    //Orion.Unequip('Earrings');
    Orion.Unequip('Talisman');
    Orion.Wait(350);
    Orion.Equip('setbracair'); // браслет
    //Orion.Equip('ppRingtemp'); // кольцо
    //Orion.Equip('ppEarringtemp'); // сережки
    Orion.Equip('setneckfire'); // шея ожерелье
    Orion.Wait(0);
}




/**
 * Description
 * @method StartOrStopFunction
 * @param {} functionName
 * @return 
 */
function StartOrStopFunction(functionName)
{
    if (Orion.ScriptRunning(functionName))
    {
        Orion.Terminate(functionName);
        Orion.Print(functionName + " остановлен!");
    }
    else
    {
        Orion.Exec(functionName);
        Orion.Print(functionName + " запущен!");
    }
}

//--# AutoHeal
//=== Функция авто-лечения бинтами  ===//

/**
 * Description
 * @method DropOnFoot
 * @return 
 */
function DropOnFoot()
{
    while (true)
    {
        var list = Orion.FindList('1');

        if (!list.length)
            return;

        for (var i = 0; i < list.length; i++)
        {
            Orion.DropHere(list[i]);
            Orion.аWait(100);
        }

        Orion.Wait(100);
    }
}

/**
 * Description
 * @method EmptyContainer
 * @return 
 */
function EmptyContainer()
{


    Orion.UseObject('emptycontainer');


    var list = Orion.FindType('-1', '-1', 'emptycontainer');

    for (var i = 0; i < list.length; i++)
    {
        Orion.MoveItem(list[i], 0, 'LootBag');
        Orion.Wait('0');
    }
}

/**
 * Description
 * @method useitem
 * @return 
 */
function useitem()
{
    while (true)
    {
        var list = Orion.FindList('1', ground, '', '20');

        for (var i = 0; i < list.length; i++)
        {
            Orion.UseObject(list[i]);
            Orion.Wait(250);
        }

        Orion.Wait(100);
    }
}


/**
 * Description
 * @method LootFromGround
 * @return 
 */
function LootFromGround()
{
    while (true)
    {
        var list = Orion.FindList('1', ground);

        for (var i = 0; i < list.length; i++)
        {
            Orion.UseObject(list[i]);
            Orion.Wait(250);
        }

        Orion.Wait(100);
    }
}


/**
 * Description
 * @method A_Auto_Heal_Bandage
 * @return 
 */
function A_Auto_Heal_Bandage()
{

    var textColor1 = 63;
    var textColor2 = 54;
    var Msg = "cured|finish|barely|little";
    var bandageType = '0x0E21';
    Orion.OpenContainer("backpack", 200);
    Orion.Wait(1000);

    while (true)
    {
        //      A_AutoLoot();
        if (Orion.Count('0x0E21') == 0)
        {
            Orion.Print(33, '       [' + Orion.Count('0x0E21') + '] bandage left ! ');
            Orion.Wait(5000);
            continue;
        }
        var playerHpPercentage = Player.Hits() * 100 / Player.MaxHits();
        if (playerHpPercentage < 99)
        {
            Orion.CreateClientMacro('BandageSelf').Play();
            Orion.Print(textColor1, '     Heal - [' + Player.Name() + ']');
            Orion.CharPrint(self, textColor2, ' Heal start');
            if (Orion.InJournal('You begin applying the bandages', 'sys'))
                Orion.ClearJournal(Msg);
            Timer = Orion.Now() + 15000;
            Orion.Wait(1000);
            var seconds = 1;
            while (!Orion.InJournal(Msg) && Orion.Now() < Timer)
            {
                Orion.Print('63', ' -( ' + seconds + ' )-');
                Orion.Wait(1000);
                ++seconds;
            }
            Orion.CharPrint(self, textColor1, 'Heal finished');
            //             A_AutoLoot();
            if (Orion.Count('0x0E21') < 10)
            {
                Orion.Print('33', ' [' + Orion.Count('0x0E21') + '] bandage left ! ');
            }

        }
        Orion.Wait(100);
    }

}



/**
 * Description
 * @method AutolootGround
 * @return 
 */
function AutolootGround()
{
    while (true)
    {
        if (Player.Dead())
        {
            Orion.Wait(1000);
            continue;
        }
        {
            Orion.UseIgnoreList('IgnoreLoot');
            var list = Orion.FindList('LOOOT', ground);
            Orion.ResetIgnoreList();

            for (var i = 0; i < list.length; i++)
            {
                Orion.MoveItem(list[i], 0, 'LootBackpack');
                Orion.Wait('moveitemdelay');
            }


        }

        Orion.CancelWaitTarget();
        Orion.Wait(100);
    }
}

/**
 * Description
 * @method AUTODROP
 * @return 
 */
function AUTODROP()
{

    while (true)
    {

        if (Player.Dead())
        {
            Orion.Wait(1000);
            continue;
        }

        {
            Orion.Wait(100);
            Orion.UseIgnoreList('IgnoreLoot');
            var list = Orion.FindList('LOOOT', backpack);
            Orion.ResetIgnoreList();
            for (var i = 0; i < list.length; i++)
            {
                Orion.DropHere(list[i]);
                Orion.Wait('moveitemdelay');
            }
            Orion.Wait(100);
        }
        Orion.CancelWaitTarget();
        Orion.Wait(100);
    }
}

/**
 * Description
 * @method autoskin
 * @return 
 */
function autoskin()
{
    while (true)
    {
        //Сканируем только если живы
        if (Player.Dead())
        {
            Orion.Wait(1000);
            continue;
        }
        //Поиск трупа на земле по usedistance
        var corpses = Orion.FindType('0x2006', '-1', ground, '', 'usedistance', 'gray|red|criminal|enemy');

        //Проход по всем найденным трупам
        for (var c = 0; c < corpses.length; c++)
        {
            var serial = corpses[c]

            //Тыкаем таргетом от ножа на ласткорпс (режем)
            Orion.WaitTargetObject(serial);
            Orion.UseType('reaper');
            Orion.Wait(100);

            //Открываем труп


            //Добавляем труп в игнор и ждем 500 мс
            Orion.Ignore(serial);
            Orion.Wait(100);
        }

        Orion.CancelWaitTarget();
        Orion.Wait(100);
    }
}

//--#Potions
////////////////////////////////////////////////////////////////////////////////////////////
//Potion Scripts 
/////
/////
/////
/////
/////***created by Friar Enoch (Factavi)***
/////
/////
/////
////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method hide
 * @return 
 */
function hide()
{



    Orion.WarMode('false');
    Orion.UseSkill('Hiding');
    Orion.Wait(100);

    Orion.WarMode(true);



}

/**
 * Description
 * @method POUCH
 * @return 
 */
function POUCH()
{


    Orion.UseType('0x0E79');


}


/**
 * Description
 * @method ApplyPoison
 * @return 
 */
function ApplyPoison()
{
    var PoisonPotion = Orion.FindType('0x0F0A');
    if (!PoisonPotion.length)
    {
        Orion.Print('poison potion NOT found');
    }
    else
    {
        Orion.Print('poison potion found');
        var Rhand = Orion.ObjAtLayer('1');
        if (Rhand === null)
        {
            Orion.Print('something appropriate not armed');
        }
        else
        {
            //Orion.Print('right hand weapon is armed');
            Orion.UseSkill('Poisoning');
            Orion.WaitTargetObject(PoisonPotion);
            Orion.WaitTargetObject(Rhand.Serial());
        }
    }
}

/**
 * Description
 * @method StartExplosion
 * @return 
 */
function StartExplosion()
{


    Orion.CancelWaitrget();
    Orion.UseType('0x0F0D');
    WaitForTarget(500, 10);

}

/**
 * Description
 * @method ThrowExplosion
 * @return 
 */
function ThrowExplosion()
{
    Orion.UseType('0x0F0D');
    WaitForTarget(1500, 10);
    //
    if (Orion.GetDistance('lasttarget') > 12)
        ThrowAwayBomb(0);
    else
        Orion.TargetObject('lasttarget');
    ThrowAwayBomb(0);
}

/**
 * Description
 * @method DrinkRefresh
 * @return 
 */
function DrinkRefresh()
{
    if (Player.Mana() < Player.MaxMana())
    {

        if (!Orion.FindType('0x0EFC', 'any', 'backpack', 'any', 'any', 'any', true))
        {
            Orion.CharPrint('self', '63', 'refresh potion not found');
        }
        Orion.Say('.drink magref');
    }
    else
    {
        Orion.CharPrint('self', '63', 'Mana is full');
    }
}

/**
 * Description
 * @method DrinkAgilStr
 * @return 
 */
function DrinkAgilStr()
{
    DisarmLeftHand();
    Orion.Say('[doubleclick greateragilitypotion');
    Orion.Wait(600);
    Orion.Say('[doubleclick greaterstrengthpotion');
}



/**
 * Description
 * @method Arm
 * @return 
 */
function Arm()
{
    Orion.Arm('bow');
}


/**
 * Description
 * @method Arm2
 * @return 
 */
function Arm2()
{

    Orion.Arm('bow2');
}

/**
 * Description
 * @method DrinkCureHeal
 * @return 
 */
function DrinkCureHeal()
{
    DisarmLeftHand();
    //if (Player.Poisoned() ) <--- not working on UOForever!!
    if (Orion.InJournal('nauseous|pain|', 'my'))
    {
        //Orion.CharPrint('self', '33', 'debug: poisoned, drinking cure');
        Orion.Say('[doubleclick greatercurepotion');
        Orion.Wait(600);
        Orion.ClearJournal();
    }
    //Orion.CharPrint('self', '33', 'debug: drinking heal');
    Orion.Say('[doubleclick greaterhealpotion');
    Orion.Wait(600);
}

/**
 * Description
 * @method DrinkStrength
 * @return 
 */
function DrinkStrength()
{
    if (!Orion.FindType('0x0F09', 'any', 'backpack'))
    {
        Orion.CharPrint('self', '63', 'strength potion not found');
    }

    else
    {
        var Lhand = Orion.ObjAtLayer('2');
        if (Lhand !== null)
        {
            Orion.Print('disarming left hand');
            Orion.MoveItem(Lhand.Serial(), 'all', 'backpack');
            Orion.Wait(600);
        }
        Orion.Say('[drink greaterstrengthpotion');
        Orion.Say('[drink strengthpotion');
        if (Lhand !== null)
        {
            Orion.Wait(600);
            Orion.Equip(Lhand.Serial());
        }
    }
}



////////////////////////////////////////////////////////////////////////////////////////////
//Any pot in the backpack
/////
///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////M@XIM
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method SimpleDrinkHeal
 * @return 
 */
function SimpleDrinkHeal()
{
    var weapon = Orion.ObjAtLayer("LeftHand");
    if (weapon != null)
    {
        Orion.Unequip("LeftHand");
        Orion.Wait(600);
    }
    Orion.UseType('0x0F0C');
    if (weapon != null)
    {
        Orion.Wait(1000);
        Orion.Equip(weapon.Serial());
        Orion.Wait(200);
    }
}

/**
 * Description
 * @method SimpleDrinkCure
 * @return 
 */
function SimpleDrinkCure()
{
    var weapon = Orion.ObjAtLayer("LeftHand");
    if (weapon != null)
    {
        Orion.Unequip("LeftHand");
        Orion.Wait(600);
    }
    Orion.UseType('0x0F07');
    if (weapon != null)
    {
        Orion.Wait(1000);
        Orion.Equip(weapon.Serial());
        Orion.Wait(200);
    }
}

/**
 * Description
 * @method SimpleDrinkStrength
 * @return 
 */
function SimpleDrinkStrength()
{
    var weapon = Orion.ObjAtLayer("LeftHand");
    if (weapon != null)
    {
        Orion.Unequip("LeftHand");
        Orion.Wait(600);
    }
    Orion.UseType('0x0F09');
    if (weapon != null)
    {
        Orion.Wait(1000);
        Orion.Equip(weapon.Serial());
        Orion.Wait(200);
    }
}

/**
 * Description
 * @method SimpleDrinkAgility
 * @return 
 */
function SimpleDrinkAgility()
{
    var weapon = Orion.ObjAtLayer("LeftHand");
    if (weapon != null)
    {
        Orion.Unequip("LeftHand");
        Orion.Wait(600);
    }
    Orion.UseType('0x0F08');
    if (weapon != null)
    {
        Orion.Wait(1000);
        Orion.Equip(weapon.Serial());
        Orion.Wait(200);
    }
}

/**
 * Description
 * @method SimpleDrinkRefresh
 * @return 
 */
function SimpleDrinkRefresh()
{
    var weapon = Orion.ObjAtLayer("LeftHand");
    if (weapon != null)
    {
        Orion.Unequip("LeftHand");
        Orion.Wait(600);
    }
    Orion.UseType('0x0F0B');
    if (weapon != null)
    {
        Orion.Wait(1000);
        Orion.Equip(weapon.Serial());
        Orion.Wait(200);
    }
}




/**
 * Description
 * @method GH
 * @return 
 */
function GH()
{
    Orion.Say('.drink talma');
}

/**
 * Description
 * @method invisbanka
 * @return 
 */
function invisbanka()
{
    Orion.Say('.drink invis');
}


/**
 * Description
 * @method Fhide
 * @return 
 */
function Fhide()
{
    Orion.UseType('0x0DD6', '0x03E9');
}



/**
 * Description
 * @method INF
 * @return 
 */
function INF()
{
    Orion.UseObject('INF');
    Orion.WaitTargetObject('enemy');
}

/**
 * Description
 * @method INL
 * @return 
 */
function INL()
{
    Orion.UseObject('INL');
}

/**
 * Description
 * @method ghomeric
 * @return 
 */
function ghomeric()
{
    Orion.Say('.drink ghomeric');
}

/**
 * Description
 * @method gexpl
 * @return 
 */
function gexpl()
{
    Orion.Say('.drink gexpl');
    Orion.WaitTargetObject('enemy');

}

/**
 * Description
 * @method gexplself
 * @return 
 */
function gexplself()
{
    Orion.Say('.drink gexpl');
    Orion.WaitTargetObject('self');

}

/**
 * Description
 * @method Fcure
 * @return 
 */
function Fcure()
{
    Orion.UseType('0x0DD6', '0x005B');
}

/**
 * Description
 * @method ttamla
 * @return 
 */
function ttamla()
{
    Orion.UseType('0x0F0C', '0x009B');
}

/**
 * Description
 * @method Fheal
 * @return 
 */
function Fheal()
{
    Orion.UseType('0x0DD6', '0x0009');
}



/**
 * Description
 * @method skovoroda
 * @return 
 */
function skovoroda()
{
    Orion.UseType('0x097F', '0xffff');
}


//--#Misc
////////////////////////////////////////////////////////////////////////////////////////////
//Using items
/////
/////
/////
/////
/////***created by Friar Enoch (Factavi)***
/////
/////
/////+ FastRecall & UseGate
////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method CheckTalisman
 * @return 
 */
function CheckTalisman()
{
    //Orion.UseObject(['0x43A23925']);
    Orion.UseObject('0x4148618F ');
}

/**
 * Description
 * @method GetInfo
 * @return 
 */
function GetInfo()
{
    TextWindow.Clear();
    Orion.Info();
}

/**
 * Description
 * @method StopAllScripts
 * @return 
 */
function StopAllScripts()
{
    Orion.Print(0x0026, 'Отменено.');
    Orion.OptionAlwaysRun(false);
    Orion.Terminate('all');
}

/**
 * Description
 * @method OpenBackpack
 * @return 
 */
function OpenBackpack()
{
    Orion.OpenContainer('backpack');
}

/**
 * Description
 * @method OpenPaperdoll
 * @return 
 */
function OpenPaperdoll()
{
    Orion.OpenPaperdoll('self');
}

/**
 * Description
 * @method OpenJournal
 * @return 
 */
function OpenJournal()
{
    Orion.ShowJournal();
}

/**
 * Description
 * @method OpenCorpse
 * @return 
 */
function OpenCorpse()
{
    var corpse = Orion.FindType('0x2006', 'any', 'ground', 'any', '2');
    if (!corpse.length)
    {
        Orion.CharPrint('self', '906', '-- no corpses nearby --');
    }
    else
    {
        Orion.UseObject(corpse);
    }
}

/**
 * Description
 * @method UseRightHand
 * @return 
 */
function UseRightHand()
{
    var item = Orion.ObjAtLayer('1');
    Orion.UseObject(item.Serial());
}

/**
 * Description
 * @method hiding
 * @return 
 */
function hiding()
{
    Orion.UseSkill('hiding');
}

/**
 * Description
 * @method UseScissors
 * @return 
 */
function UseScissors()
{
    var Scissors = Orion.FindType('0xf9f');
    Orion.UseObject(Scissors);
}

/**
 * Description
 * @method UseReflectScroll
 * @return 
 */
function UseReflectScroll()
{
    Orion.UseType('0x1F50');
}

/**
 * Description
 * @method TrapPouch
 * @return 
 */
function TrapPouch()
{
    if (!Orion.FindObject('PouchContainer'))
    {
        Orion.CharPrint('self', '906', 'which container has the pouches?');
        Orion.AddObject('PouchContainer');
        while (Orion.HaveTarget())
        {
            Orion.Wait('50');
        }
    }
    var pouchContainer = Orion.FindObject('PouchContainer');
    if (pouchContainer !== null)
    {
        var pouch = Orion.FindType('0x0E79', '0x0000', 'PouchContainer');
        var n = pouch.length;
        Orion.CharPrint('self', '906', 'found ' + n + ' pouches to trap');
        for (var i = 0; i < n; ++i)
        {
            Orion.Cast('Magic Trap', pouch[i]);
            Orion.Say(i);
            Orion.Wait(2000);
        }
        if (pouch.length)
            TrapPouch();
    }
    else
    {
        Orion.CharPrint('self', '906', 'there is no PouchContainer');
    }
}

/**
 * Description
 * @method PopPouch
 * @return 
 */
function PopPouch()
{
    var pouch = Orion.FindType('0x0E79', '0x0026', 'backpack', 'any', 'any', 'any', true);
    if (pouch.length > 1)
    {
        Orion.CharPrint('self', '906', pouch.length);
        Orion.UseObject(pouch[0]);
    }
    if (pouch.length === 1)
    {
        Orion.CharPrint('self', '906', 'pouches down to one');
        Orion.UseObject(pouch[0]);
        Orion.Cast('Magic Trap');
        Orion.WaitTargetObject(pouch[0]);
    }
    if (pouch.length === 0)
    {
        Orion.CharPrint('self', '906', 'no trapped pouches -- will try to make one');
        Orion.Cast('Magic Trap');
        var pouch = Orion.FindType('0x0E79', 'any', 'backpack', 'any', 'any', 'any', true);
        Orion.WaitTargetObject(pouch[0]);
    }
}


/**
 * Description
 * @method StunWrestle
 * @return 
 */
function StunWrestle()
{
    Orion.UseWrestlingStun();
    Orion.Wait(800);
    Orion.TargetObject("lastattack");
}

/**
 * Description
 * @method AddMount
 * @return 
 */
function AddMount()
{
    Orion.AddObject('myMount');
    Orion.Print('-1', 'Target your mount')
}

/**
 * Description
 * @method MountAndDismount
 * @return 
 */
function MountAndDismount()
{
    if (!Orion.ObjAtLayer('Mount'))
    {
        if (!Orion.FindObject('myMount'))
            AddMount();
        else
            Orion.UseObject('myMount');
    }
    else
        Orion.UseObject('self');
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////HOTRIDE
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method FastRecall
 * @return 
 */
function FastRecall()
{
    if (Orion.GetSerial('runebook') == '0x00000000')
    {
        Orion.AddObject('runebook');
        Orion.Print('0x0123', 'Choose your runebook/rune for fast recall.');
        Orion.Wait(200);
        while (Orion.HaveTarget())
            Orion.Wait(1000);
        Orion.Print('0x0123', 'Bind is added to Lists->Objects.');
    }
    Orion.Cast('Recall');
    Orion.WaitTargetObject('runebook');
}



/**
 * Description
 * @method FastRecall2
 * @return 
 */
function FastRecall2()
{
    if (Orion.GetSerial('runebook2') == '0x00000000')
    {
        Orion.AddObject('runebook2');
        Orion.Print('0x0123', 'Choose your runebook/rune for fast recall.');
        Orion.Wait(200);
        while (Orion.HaveTarget())
            Orion.Wait(1000);
        Orion.Print('0x0123', 'Bind is added to Lists->Objects.');
    }
    Orion.Cast('Recall');
    Orion.WaitTargetObject('runebook2');
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////M@XIM
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method UseGate
 * @return 
 */
function UseGate()
{
    Orion.CancelWaitGump();
    Orion.WaitGump(Orion.CreateGumpHook(1));
    if (!Orion.UseFromGround("0x0F6C|0x4BCB", "-1", 2))
    {
        Orion.CharPrint(self, 1153, "Gate is too far away!");
        Orion.CancelWaitGump();
    }
}

//--#Equipping
////////////////////////////////////////////////////////////////////////////////////////////
//Weapons & Shields
/////
/////
/////
/////
/////***created by Friar Enoch (Factavi)***
/////
/////
/////
////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method ArmWeapon
 * @return 
 */
function ArmWeapon()
{
    if (!Orion.FindObject('weapon'))
    {
        Orion.CharPrint('self', '63', 'Toggle a weapon to be active first!');
    }
    else
    {
        var currentRHand = Orion.ObjAtLayer('1');
        if (currentRHand !== null)
        {
            var weaponONEserial = Orion.GetSerial('weapon');
            var currentRHandserial = currentRHand.Serial();
            if (weaponONEserial === currentRHandserial)
            {
                //Orion.CharPrint('self', '33', 'weapon ONE is equipped');
                ArmShield();
            }
            else
            {
                //Orion.CharPrint('self', '33', 'something else is equipped there');
                Orion.GetStatus('self');
                Orion.Cast('Greater Heal');
                Orion.Wait(50);
                Orion.Equip('weapon');
            }
        }
        else
        {
            Orion.Equip('weapon');
        }
    }
}

/**
 * Description
 * @method ArmShield
 * @return 
 */
function ArmShield()
{
    if (!Orion.FindObject('shield'))
    {
        Orion.CharPrint('self', '63', 'no shield is set');
    }
    else
    {
        var currentLHand = Orion.ObjAtLayer('2');
        if (currentLHand !== null)
        {
            if (currentLHand.Serial() === Orion.GetSerial('shield'))
            {
                Orion.CharPrint('self', '33', 'shield is equipped');
            }
            else
            {
                Orion.CharPrint('self', '33', 'some other shield is equipped');
            }
        }
        else
        {
            Orion.Equip('shield');
        }
    }
}

/**
 * Description
 * @method SetWeapon1
 * @return 
 */
function SetWeapon1()
{
    Orion.RemoveObject('weaponONE');
    Orion.Print('Target weaponONE');
    Orion.AddObject('weaponONE');
    WaitForPlayerToTarget();
    if (Orion.FindObject('weaponONE'))
    {
        Orion.CharPrint('self', '2002', 'weaponONE set.');
    }
    else
    {
        Orion.CharPrint('self', '2002', 'weaponONE not set');
    }
}

/**
 * Description
 * @method ToggleWeaponONE
 * @return 
 */
function ToggleWeaponONE()
{
    if (!Orion.FindObject('weaponONE'))
    {
        SetWeapon1();
    }
    else
    {
        Orion.RemoveObject('weapon');
        Orion.CharPrint('self', '63', 'Toggled to weaponONE');
        Orion.AddObject('weapon', 'weaponONE');
    }
}

/**
 * Description
 * @method SetWeapon2
 * @return 
 */
function SetWeapon2()
{
    Orion.RemoveObject('weaponTWO');
    Orion.Print('Target weaponTWO');
    Orion.AddObject('weaponTWO');
    WaitForPlayerToTarget();
    if (Orion.FindObject('weaponTWO'))
    {
        Orion.CharPrint('self', '2002', 'weaponTWO set.');
    }
    else
    {
        Orion.CharPrint('self', '2002', 'weaponTWO not set');
    }
}

/**
 * Description
 * @method ToggleWeaponTWO
 * @return 
 */
function ToggleWeaponTWO()
{
    if (!Orion.FindObject('weaponTWO'))
    {
        SetWeapon2();
    }
    else
    {
        Orion.RemoveObject('weapon');
        Orion.CharPrint('self', '63', 'Toggled to weaponTWO');
        Orion.AddObject('weapon', 'weaponTWO');
    }
}

/**
 * Description
 * @method SetShield
 * @return 
 */
function SetShield()
{
    Orion.RemoveObject('shield');
    Orion.Print('Target shield');
    Orion.AddObject('shield');
    WaitForPlayerToTarget();
    if (Orion.FindObject('shield'))
    {
        Orion.CharPrint('self', '2002', 'shield set.');
    }
    else
    {
        Orion.CharPrint('self', '2002', 'shield not set');
    }
}

//--#Targetting
////////////////////////////////////////////////////////////////////////////////////////////
//LastTarget
/////
/////
/////
/////
/////***created by Friar Enoch (Factavi)***
/////
/////
/////
////////////////////////////////////////////////////////////////////////////////////////////
/**
 * Description
 * @method PvMAttack
 * @return 
 */
function PvMAttack()
{
    var mobs = Orion.FindType('!0x0190|!0x0191|!0x00E8|!0x00A4', '0xFFFF', ground,
        'near|mobile|ignorefriends', '10', 'gray|red|criminal|enemy');
    if (mobs.length)
        Orion.Attack(mobs[0]);
}

/**
 * Description
 * @method taming
 * @return 
 */
function taming()
{
    while (true)
    {
        var mobs = Orion.FindType('!0x0190|!0x0191|!0x00E8|!0x00A4', '0xFFFF', ground,
            'near|mobile|ignorefriends', '10', 'gray|red|criminal|enemy');
        if (mobs.length)
            Orion.UseSkill('Animal Taming');
        Orion.WaitTargetObject(mobs[0]);
        Orion.Wait(11000);
    }
}



/**
 * Description
 * @method FindNearestEnemy
 * @param {} a
 * @return MemberExpression
 */
function FindNearestEnemy(a)
{
    Orion.Ignore('self');
    var enemy = Orion.FindType("-1", "-1", "ground", "human|near|live|ignorefriends", 18,
        "gray|criminal|blue|red|orange");

    if (!enemy.length)
    {
        //		Orion.Ignore('self');
        //		var friends = Orion.GetFriendList();
        //		for(var i = 0; i < friends.length; i++) {
        //			Orion.Ignore(friends[i]);
        //		}
        //		enemy = Orion.FindType('0xFFFFFF', '-1', ground, 'near|mobile', '18', 'gray|criminal|red|orange|blue');	
        //		if ( !enemy.length )  	{
        Orion.Print('-1', 'no enemy found, resetting ignore list');
        Orion.IgnoreReset();
        return '';
        //		}
    }
    return enemy[0];
}

/**
 * Description
 * @method train_Stealth
 * @return 
 */
function train_Stealth()
{
    var value = Orion.SkillValue('Stealth');
    while (value < 1000)
    {
        if (!Player.Hidden())
        {
            Orion.UseSkill('Hiding');
            Orion.Wait(11000);
        }
        if (Player.Hidden())
        {
            Orion.UseSkill('Stealth');
            Orion.Wait(11000);
        }
        Orion.Wait(300);
    }
}



/**
 * Description
 * @method FindNearestEnemy2
 * @param {} a
 * @return MemberExpression
 */
function FindNearestEnemy2(a)
{
    Orion.Ignore('self');
    var enemy = Orion.FindType("-1", "-1", "ground", "human|near|live|ignorefriends", 18,
        "gray|criminal|orange|red");

    if (!enemy.length)
    {
        //		Orion.Ignore('self');
        //		var friends = Orion.GetFriendList();
        //		for(var i = 0; i < friends.length; i++) {
        //			Orion.Ignore(friends[i]);
        //		}
        //		enemy = Orion.FindType('0xFFFFFF', '-1', ground, 'near|mobile', '18', 'gray|criminal|red|orange|blue');	
        //		if ( !enemy.length )  	{
        Orion.Print('-1', 'no enemy found, resetting ignore list');
        Orion.IgnoreReset();
        return '';
        //		}
    }
    return enemy[0];
}

/**
 * Description
 * @method FindNearestEnemy3
 * @param {} a
 * @return MemberExpression
 */
function FindNearestEnemy3(a)
{
    Orion.Ignore('self');
    var enemy = Orion.FindType('!0x0190|!0x0191|!0x00E8|!0x00A4', '0xFFFF', ground,
        'near|mobile|ignorefriends', '15', 'gray|red|criminal|enemy|blue|animal|yellow');
    //var enemy = Orion.FindType('0xFFFF','0xFFFF', ground, 'mobile', '15');
    // var enemy = Orion.FindType(ground, "human|near|live|ignoreself|ignorefriends", 18)
    if (!enemy.length)
    {
        //		Orion.Ignore('self');
        //		var friends = Orion.GetFriendList();
        //		for(var i = 0; i < friends.length; i++) {
        //			Orion.Ignore(friends[i]);
        //		}
        //var enemy = Orion.FindType('0xFFFFFF',ground, "human|near|live|ignoreself|ignorefriends", 18');	
        //		if ( !enemy.length )  	{
        Orion.Print('-1', 'no enemy found, resetting ignore list');
        Orion.IgnoreReset();
        return '';
        //		}
    }
    return enemy[0];
}




/**
 * Description
 * @method TargetNextEnemyBlueorDuel
 * @return 
 */
function TargetNextEnemyBlueorDuel()
{
    if (Orion.HaveTarget() && Orion.GetDistance(lasttarget) <= 5)
    {

    }
    else
    {
        var serial = FindNearestEnemy(0);
        if (!serial.length) return;
        var enemy = Orion.FindObject(serial);
        var notoColor;
        switch (enemy.Notoriety())
        {
            case 1:
                notoColor = 2119;
                break;
            case 3:
                notoColor = 906;
                break;
            case 6:
                notoColor = 33;
                break;
            default:
                notoColor = 906;
        }

        Orion.CharPrint(self, notoColor, '[Enemy:] ' + enemy.Name());
        Orion.ClientLastTarget(serial);
        Orion.AddObject('enemy', serial);
        Orion.Ignore(serial);
    }
}

/**
 * Description
 * @method TargetNextEnemyPK
 * @return 
 */
function TargetNextEnemyPK()
{
    if (Orion.HaveTarget() && Orion.GetDistance(lasttarget) <= 5)
    {

    }
    else
    {
        var serial = FindNearestEnemy2(0);
        if (!serial.length) return;
        var enemy = Orion.FindObject(serial);
        var notoColor;
        switch (enemy.Notoriety())
        {
            case 1:
                notoColor = 2119;
                break;
            case 3:
                notoColor = 906;
                break;
            case 6:
                notoColor = 33;
                break;
            default:
                notoColor = 906;
        }

        Orion.CharPrint(self, notoColor, '[Enemy:] ' + enemy.Name());
        Orion.ClientLastTarget(serial);
        Orion.AddObject('enemy', serial);

        Orion.Ignore(serial);
    }
}

/**
 * Description
 * @method TargetNextEnemyMOBS
 * @return 
 */
function TargetNextEnemyMOBS()
{
    if (Orion.HaveTarget() && Orion.GetDistance(lasttarget) <= 15)
    {

    }
    else
    {
        var serial = FindNearestEnemy3(0);
        if (!serial.length) return;
        var enemy = Orion.FindObject(serial);
        var notoColor;
        switch (enemy.Notoriety())
        {
            case 1:
                notoColor = 2119;
                break;
            case 3:
                notoColor = 906;
                break;
            case 6:
                notoColor = 33;
                break;
            default:
                notoColor = 906;
        }

        Orion.CharPrint(self, notoColor, '[Enemy:] ' + enemy.Name());
        Orion.ClientLastTarget(serial);
        Orion.AddObject('enemy', serial);

        Orion.Ignore(serial);
    }
}

/**
 * Description
 * @method TargetLast
 * @return 
 */
function TargetLast()
{


    Orion.TargetObject('enemy');

}

/**
 * Description
 * @method tArgetNaPaJIec
 * @return 
 */
function tArgetNaPaJIec()
{
    Orion.AddObject('enemy');
}


/**
 * Description
 * @method Combo
 * @return 
 */
function Combo()
{
    if (Orion.HaveTarget() && Orion.GetDistance('lasttarget') <= 12)
    {
        Orion.TargetObject('lasttarget');
        Orion.Wait(400);
        Orion.Cast('Energy Bolt');
        Orion.WaitTargetObject(lasttarget);
    }
}

/**
 * Description
 * @method TargetSelf
 * @return 
 */
function TargetSelf()
{
    if (Orion.HaveTarget())
        Orion.TargetObject(self);
}

/**
 * Description
 * @method TargetNearestInjuredFriend
 * @return 
 */
function TargetNearestInjuredFriend()
{
    var friend = Orion.FindFriend('injured', 18);
    if (friend.length)
        Orion.TargetObject(friend);
    else
        Orion.Print('-1', 'Found no injured friends neaby to target');
}

/**
 * Description
 * @method ResNearestDeadFriend
 * @return 
 */
function ResNearestDeadFriend()
{
    var friend = Orion.FindFriend('dead', 18);
    if (friend.length)
        Orion.Cast('Resurrection', friend);
    else
        Orion.Print('-1', 'Found no injured friends neaby to resurrect');
}

/**
 * Description
 * @method HealNearestInjuredFriend
 * @return 
 */
function HealNearestInjuredFriend()
{
    var friend = Orion.FindFriend('injured', 18);
    if (friend.length)
        Orion.Cast('Greater Heal', friend);
    else
        Orion.Print('-1', 'Found no injured friends neaby to heal');
}

/**
 * Description
 * @method bint_v_givky
 * @return 
 */
function bint_v_givky()
{
    var friend = Orion.FindFriend('injured', 18);
    if (friend.length)
        Orion.UseType('0x0E21', friend);
    else
        Orion.Print('-1', 'Found no injured friends neaby to heal');
}

///////////////////Good to use when you are dueling against Friends
/**
 * Description
 * @method SetEnemy
 * @return 
 */
function SetEnemy()
{
    Orion.AddObject('templasttarget');
    WaitForPlayerToTarget();
    Orion.TargetObject('templasttarget');
    Orion.ClientLastTarget('templasttarget');

}

/**
 * Description
 * @method AttackLastTarget
 * @return 
 */
function AttackLastTarget()
{
    Orion.Attack('enemy')

}

/**
 * Description
 * @method Disruptor
 * @return 
 */
function Disruptor()
{
    if (!Orion.HaveTarget())
    {
        var disruptor = Orion.UseObject('0x40096989');
        if (disruptor == null)
        {
            var disruptor = Orion.ObjAtLayer('17');
        }
        if (disruptor != null)
        {
            Orion.Equip(disruptor.Serial());
            Orion.CharPrint('self', '906', '-- trying to disrupt --');
        }
        else
        {
            Orion.CharPrint('self', '906', '--unable to disrupt--')
        }
    }
    else
    {
        Orion.CancelTarget();
    }
}

/**
 * Description
 * @method CancelQueue
 * @return 
 */
function CancelQueue()
{
    Orion.CancelWaitTarget();
    Orion.CharPrint('self', '906', 'canceling target');
}

/**
 * Description
 * @method CastTargetedEnemy
 * @param {} spellName
 * @return 
 */
function CastTargetedEnemy(spellName)
{ //cast spell with a given name on target
    if (Orion.HaveTarget())
    {
        Orion.TargetObject('lasttarget');
    }
    else
    {
        Orion.Cast(spellName, 'lasttarget');
    }
}

/**
 * Description
 * @method CastSelf
 * @param {} spellName
 * @return 
 */
function CastSelf(spellName)
{
    Orion.Cast(spellName, 'self');
}


//--#AttackingPlayers
////////////////////////////////////////////////////////////////////////////////////////////
//LastATTACK
/////
/////
/////
/////
/////Friar Enoch (Factavi) please try this
/////
/////
/////
////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////Attacking Players/NPCs
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method AttackNextPlayer
 * @return 
 */
function AttackNextPlayer()
{
    Orion.Ignore(self);
    var target = Orion.FindType("-1", "-1", "ground", "human|near|live|ignorefriends", 18,
        "gray|criminal|orange|red");
    if (target.length != 0)
    {
        Orion.Attack(target[0]);
        Orion.Ignore(target[0]);
    }
    else
    {
        Orion.IgnoreReset();
        Orion.Ignore(self);
        target = Orion.FindType("-1", "-1", "ground", "human|near|live|ignorefriends", 18,
            "gray|criminal|orange|red");
        if (target.length != 0)
        {
            Orion.Attack(target[0]);
            Orion.Ignore(target[0]);
        }
    }
}

/**
 * Description
 * @method PKAttackNextPlayer
 * @return 
 */
function PKAttackNextPlayer()
{
    Orion.Ignore(self);
    var target = Orion.FindType("-1", "-1", "ground", "human|near|live|ignorefriends", 18,
        "gray|criminal|orange|red|innocent|blue");
    if (target.length != 0)
    {
        Orion.Attack(target[0]);
        Orion.Ignore(target[0]);
    }
    else
    {
        Orion.IgnoreReset();
        Orion.Ignore(self);
        target = Orion.FindType("-1", "-1", "ground", "human|near|live|ignorefriends", 18,
            "gray|criminal|orange|red|innocent|blue");
        if (target.length != 0)
        {
            Orion.Attack(target[0]);
            Orion.Ignore(target[0]);
        }
    }
}

/**
 * Description
 * @method AttackNextMonster
 * @return 
 */
function AttackNextMonster()
{
    var Target = Orion.FindType("!0x0190|!0x0191", "-1", "ground", "near|live", 18, "gray|red");
    if (Target.length != 0)
    {
        Orion.Attack(Target[0]);
        Orion.Ignore(Target[0]);
    }
    else
    {
        Orion.IgnoreReset();
        Target = Orion.FindType("!0x0190|!0x0191", "-1", "ground", "near|live", 18, "gray|red");
        if (Target.length != 0)
        {
            Orion.Attack(Target[0]);
            Orion.Ignore(Target[0]);
        }
    }
}

/**
 * Description
 * @method TargetByAttack
 * @return 
 */
function TargetByAttack()
{
    if (Orion.HaveTarget() && Orion.GetDistance(lastattack) <= 12)
        Orion.TargetObject(lastattack);
}

/**
 * Description
 * @method StartExplosionAttack
 * @return 
 */
function StartExplosionAttack()
{
    Orion.UseType('0x0F0D');
    Orion.WaitTargetObject('-1');
}

/**
 * Description
 * @method ThrowExplosionAttack
 * @return 
 */
function ThrowExplosionAttack()
{
    Orion.UseType('0x0F0D');
    if (Orion.FindObject(lastattack))
    {
        Orion.WaitTargetObject(lastattack);
    }
}

//--#Healing
////////////////////////////////////////////////////////////////////////////////////////////
//Bandages
/////
/////
/////
/////
/////***created by Friar Enoch (Factavi)***
/////
/////
/////
////////////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////M@XIM
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * Description
 * @method AutoHealing
 * @return 
 */
function AutoHealing()
{
    var msg = "You finish applying the bandages|You have been cured of all poisons|You apply the bandages";
    while (Orion.Count("bandage") && !Player.Dead())
    {
        if (Player.Hits() < Player.MaxHits())
        {
            Orion.CreateClientMacro("BandageSelf").Play();
            Orion.WaitJournal(msg, Orion.Now(), Orion.Now() + 20000, "sys");
            Orion.Wait(100);
        }
        else
        {
            Orion.Wait(100);
        }
    }
    if (!Player.Dead())
    {
        Orion.CharPrint(self, 1153, "-- no bandages left --");
    }
}

/**
 * Description
 * @method BandageTimer
 * @return 
 */
function BandageTimer()
{
    Orion.ClearJournal();
    if (Player.Hits() == Player.MaxHits())
    {
        Orion.CharPrint(self, '906', 'You already have full hp');
        return;
    }
    Orion.CreateClientMacro('BandageSelf').Play();
    Orion.CharPrint(self, '906', 'Bandaging started...');
    Orion.Wait(1000);
    var seconds = 1;
    while (!Orion.InJournal(
            'You finish applying the bandages|You have been cured of all poisons|You apply the bandages',
            'sys'))
    {
        Orion.Print('906', 'Bandage Timer: --' + seconds + ' --');
        Orion.Wait(1000);
        ++seconds;
    }
    Orion.CharPrint(self, '906', 'Bandaging finished');
}

/**
 * Description
 * @method SimpleBandageSelf
 * @return 
 */
function SimpleBandageSelf()
{
    Orion.CreateClientMacro('BandageSelf').Play();
}

//--#Organizer
////////////////////////////////////////////////////////////////////////////////////////////
//Grab, loot, moveItems, Warpack
/////
/////
/////
/////
/////***created by Friar Enoch (Factavi)***
/////
/////
/////
////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method GrabItem
 * @return 
 */
function GrabItem()
{
    //OpenCorpse();
    if (!Orion.HaveTarget())
    {
        var toMove = Orion.FindObject('toMove');
        if (toMove !== null | toMove !== 0)
        {
            Orion.RemoveObject('toMove');
        }
        Orion.Print('-1', 'Target something to grab.');
        Orion.AddObject('toMove');
        while (Orion.HaveTarget())
        {
            Orion.Wait('50');
        }
        toMove = Orion.FindObject('toMove');
        if (toMove !== null)
        {
            Orion.MoveItem(toMove.Serial(), 'all', backpack);
        }
    }
}

/**
 * Description
 * @method OrganizeFromList
 * @param {} frombag
 * @param {} tobag
 * @param {} listname
 * @param {} amount
 * @return 
 */
function OrganizeFromList(frombag, tobag, listname, amount)
{ //sub function for moving items around
    var item = Orion.FindList(listname, frombag);
    if (item !== null)
    {
        Orion.CharPrint('self', '906', 'moving items');
        for (var i = 0; i < item.length; i++)
        {
            Orion.MoveItem(item[i], amount, tobag);
            Orion.Wait(700);
        }
    }
    else
        Orion.CharPrint('self', '906', 'item not found');
}



/**
 * Description
 * @method OrganizeToBackpack
 * @param {} listname
 * @param {} amount
 * @return 
 */
function OrganizeToBackpack(listname, amount)
{
    var frombag = Orion.FindObject('fromBag');
    if (frombag !== null | frombag !== 0)
    {
        Orion.RemoveObject('fromBag');
    }
    Orion.Print('-1', 'Target container to move to.');
    Orion.AddObject('fromBag');
    while (Orion.HaveTarget())
    {
        Orion.Wait('50');
    }
    frombag = Orion.FindObject('fromBag');
    if (frombag !== null)
    {
        OrganizeFromList(frombag.Serial(), backpack, listname, amount);
    }
}

/**
 * Description
 * @method OrganizeFromBackpack
 * @param {} listname
 * @param {} amount
 * @return 
 */
function OrganizeFromBackpack(listname, amount)
{
    var tobag = Orion.FindObject('toBag');
    if (tobag !== null | tobag !== 0)
    {
        Orion.RemoveObject('toBag');
    }
    Orion.Print('-1', 'Target container to move from.');
    Orion.AddObject('toBag');
    while (Orion.HaveTarget())
    {
        Orion.Wait('50');
    }
    tobag = Orion.FindObject('toBag');
    if (tobag !== null)
    {
        OrganizeFromList(backpack, tobag.Serial(), listname, amount);
    }
}

/**
 * Description
 * @method OrganizeThisToThat
 * @param {} listname
 * @param {} amount
 * @return 
 */
function OrganizeThisToThat(listname, amount)
{
    Orion.RemoveObject('MoveFrom');
    Orion.RemoveObject('MoveTo');

    if (!Orion.FindObject('MoveFrom'))
    {
        Orion.CharPrint('self', '906', 'select move from bag');
        Orion.AddObject('MoveFrom');
        WaitForPlayerToTarget(0);
    }
    if (!Orion.FindObject('MoveTo'))
    {
        Orion.CharPrint('self', '906', 'select move to bag');
        Orion.AddObject('MoveTo');
        WaitForPlayerToTarget(0);
    }
    if ('MoveFrom' !== null && 'MoveTo' !== null)
    {
        OrganizeFromList('MoveFrom', 'MoveTo', listname, amount);
    }
}


/**
 * Description
 * @method WaitForPlayerToTarget
 * @param {} a
 * @return 
 */
function WaitForPlayerToTarget(a)
{
    while (Orion.HaveTarget())
    {
        Orion.Wait(100);
    }
}

/**
 * Description
 * @method WaitForTargetCursor
 * @param {} a
 * @return 
 */
function WaitForTargetCursor(a)
{
    while (!Orion.HaveTarget())
    {
        Orion.Wait(100);
        break;
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////M@XIM
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method WarPack
 * @return 
 */
function WarPack()
{
    var Index, Resource, ResourceObject, Quantity, Chest = "0x40FBF3F5",
        ResourceBag = "0x40FBF3F8";
    // Name, Type, Color, Quantity, X Coord, Y Coord
    var Items = [
        ["Black Pearls", "0x0F7A", "-1", 50, 29, 50],
        ["Blood Moss", "0x0F7B", "-1", 50, 29, 50],
        ["Garlic", "0x0F84", "-1", 50, 29, 50],
        ["Ginseng", "0x0F85", "-1", 50, 29, 50],
        ["Mandrake Roots", "0x0F86", "-1", 50, 29, 50],
        ["Nightshade", "0x0F88", "-1", 50, 29, 50],
        ["Spider's Silk", "0x0F8D", "-1", 50, 29, 50],
        ["Sulfurous Ash", "0x0F8C", "-1", 50, 29, 50]
    ];
    Orion.CharPrint(self, 1153, "Where is your WarPack?")
    Orion.AddObject("Bag");
    while (Orion.HaveTarget())
    {
        Orion.Wait(100);
    }
    Save(0);
    Orion.OpenContainer("Bag", 1000);
    Orion.OpenContainer(Chest, 1000);
    Orion.OpenContainer(ResourceBag, 1000);
    for (Index = 0; Index < Items.length; Index++)
    {
        Resource = Orion.FindType(Items[Index][1], Items[Index][2], "Bag");
        if (Resource.length != 0)
        {
            ResourceObject = Orion.FindObject(Resource[0]);
            if (Items[Index][3] > ResourceObject.Count())
            {
                Quantity = Items[Index][3] - ResourceObject.Count();
            }
            else
            {
                continue;
            }
        }
        else
        {
            Quantity = Items[Index][3];
        }
        Resource = Orion.FindType(Items[Index][1], Items[Index][2], ResourceBag);
        if (Resource.length != 0)
        {
            ResourceObject = Orion.FindObject(Resource[0]);
            if (ResourceObject.Count() >= Quantity)
            {
                if (Items[Index][3] != Quantity)
                {
                    Orion.MoveItem(ResourceObject.Serial(), Quantity, "Bag");
                }
                else
                {
                    Orion.MoveItem(ResourceObject.Serial(), Quantity, "Bag", Items[Index][4], Items[Index][5],
                        0);
                }
                Save(0);
                Orion.Wait(600);
            }
            else
            {
                Orion.Print("Items are finished " + Items[Index][0] + "!");
                Orion.PlayWav("Alarm");
                return;
            }
        }
        else
        {
            Orion.Print("Items are finished " + Items[Index][0] + "!");
            Orion.PlayWav("Alarm");
            return;
        }
    }
    Orion.CharPrint(self, 1153, "Completed WarPack!");
}

/**
 * Description
 * @method CopyWarPack
 * @return 
 */
function CopyWarPack()
{
    var Item;
    TextWindow.Clear();
    while (!Player.Dead())
    {
        Orion.CharPrint("self", 1153, "What do you want to add?")
        Orion.AddObject("Item");
        while (Orion.HaveTarget())
        {
            Orion.Wait(100);
        }
        if (Orion.GetSerial("Item") != Player.Serial())
        {
            Item = Orion.FindObject("Item");
            Orion.RequestName(Item.Serial(), 1000);
            Orion.Print("Добавлен " + Item.Name() + "!");
            TextWindow.Print("[\"" + Item.Name() + "\", \"" + Item.Graphic() + "\", \"" + Item.Color() +
                "\", " + Item.Count() + ", " + Item.X() + ", " + Item.Y() + "],");
        }
        else
        {
            Orion.CharPrint("self", 1153, "Completed CopyWarPack!");
            Orion.PlayWav("Alarm");
            TextWindow.Open();
            return;
        }
    }
}

/**
 * Description
 * @method Save
 * @param {} a
 * @return 
 */
function Save(a)
{
    var Time = Orion.Now() + 20000;
    if (Orion.InJournal("World save has been initiated"))
    {
        Orion.ClearJournal("World save has been initiated|backpack");
        Orion.Click("backpack");
        do {
            Orion.Wait(120);
        } while (!Orion.InJournal("backpack") && Orion.Now() < Time && !Player.Dead());
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////AIMED
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method AddsTypeToList
 * @param {} listName
 * @return 
 */
function AddsTypeToList(listName)
{
    //Make sure temp object doesnt exist and then add it by OA target.
    Orion.RemoveObject('tempObject');
    Orion.AddObject('tempObject');
    Orion.Print(52, 'Target an object to add its type to ' + listName);
    while (Orion.HaveTarget())
    {
        Orion.Wait(100);
    }

    var tempObject = Orion.FindObject('tempObject');
    if (tempObject == null)
    {
        Orion.Print(52, 'tempObject doesnt exist. Did you cancel your target?');
        return;
    }

    //Here we'll ask user to add comment/object name before adding it to list.
    //This is nice to have to make object types recognizable within the list later
    Orion.Print(52, 'Enter comment or type name for this object');
    Orion.ClearJournal();
    Orion.JournalIgnoreCase(true);
    var commentString = 'default comment';
    var waitDelay = 10000;
    var waited = 0;
    var msg = null;
    while (waited < waitDelay)
    {
        for (var i = 0; i < Orion.JournalCount(); i++)
        {
            msg = Orion.JournalLine(i);
            if (msg.Serial() == Player.Serial())
            {
                commentString = msg.Text();
                waited = 10000;
                break;
            }
        }
        if (waited == waitDelay) break;
        Orion.ClearJournal();
        Orion.Wait(1000);
        waited += 1000;
    }
    if (msg == null)
        Orion.Print(52, '10 seconds expired, adding tempObject with default comment');
    else
        Orion.Print(52, commentString + ' added to ' + listName);


    Orion.AddIgnoreList(listName, tempObject.Graphic(), tempObject.Color(), commentString);
}


//--#Mini/Big Heal
///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////MINI HEAL
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method MiniHeal
 * @return 
 */
function MiniHeal()
{
    if (Player.Poisoned())
        Orion.Cast('Cure', self);
    else
        Orion.Cast('Heal', self);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////BIG HEAL
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method BigHeal
 * @return 
 */
function BigHeal()
{
    if (Player.Poisoned())
        Orion.Cast('Cure', self);
    else
        Orion.Cast('Greater Heal', self);
}

//--#Magery Spells
///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////Spells :) - faster/easier to sort hotkeys
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////



/**
 * Description
 * @method MagicArrowTarget
 * @return 
 */
function MagicArrowTarget()
{
    Orion.Cast('Magic Arrow', lasttarget);
}

/**
 * Description
 * @method Fireball
 * @return 
 */
function Fireball()
{
    Orion.Cast('Fireball');
}




/**
 * Description
 * @method Harm
 * @return 
 */
function Harm()
{
    Orion.Cast('Harm');
}




/**
 * Description
 * @method HarmTarget
 * @return 
 */
function HarmTarget()
{
    Orion.Cast('Harm', lasttarget);
}


/**
 * Description
 * @method FlameStrike
 * @return 
 */
function FlameStrike()
{
    Orion.Cast('Flame Strike');
}

/**
 * Description
 * @method EnergyBolt
 * @return 
 */
function EnergyBolt()
{
    Orion.Cast('Energy Bolt');
}

/**
 * Description
 * @method Explosion
 * @return 
 */
function Explosion()
{
    Orion.Cast('Explosion');
}

/**
 * Description
 * @method Lightning
 * @return 
 */
function Lightning()
{
    Orion.Cast('Lightning');
}

/**
 * Description
 * @method LightningTarget
 * @return 
 */
function LightningTarget()
{
    Orion.Cast('Lightning', lasttarget);
}

/**
 * Description
 * @method MindBlast
 * @return 
 */
function MindBlast()
{
    Orion.Cast('Mind Blast');
}

/**
 * Description
 * @method Paralyze
 * @return 
 */
function Paralyze()
{
    Orion.Cast('Paralyze');
}

/**
 * Description
 * @method Poison
 * @return 
 */
function Poison()
{
    Orion.Cast('Poison');
}

/**
 * Description
 * @method Clumsy
 * @return 
 */
function Clumsy()
{
    Orion.Cast('Clumsy');
}

/**
 * Description
 * @method Weaken
 * @return 
 */
function Weaken()
{
    Orion.Cast('Weaken');
}

/**
 * Description
 * @method Curse
 * @return 
 */
function Curse()
{
    Orion.Cast('Curse');
}

/**
 * Description
 * @method Dispel
 * @return 
 */
function Dispel()
{
    Orion.Cast('Dispel');
}

/**
 * Description
 * @method Teleport
 * @return 
 */
function Teleport()
{
    Orion.Cast('Teleport');
}

/**
 * Description
 * @method Reveal
 * @return 
 */
function Reveal()
{
    Orion.Cast('Reveal');
}

/**
 * Description
 * @method BladeSpirits
 * @return 
 */
function BladeSpirits()
{
    Orion.Cast('Blade Spirits');
}

/**
 * Description
 * @method DispelField
 * @return 
 */
function DispelField()
{
    Orion.Cast('Dispel Field');
}

/**
 * Description
 * @method feeeblemind
 * @return 
 */
function feeeblemind()
{
    Orion.Cast('Feeblemind');
}


/**
 * Description
 * @method WallOfStone
 * @return 
 */
function WallOfStone()
{
    Orion.Cast('Wall of Stone');
}

/**
 * Description
 * @method FireField
 * @return 
 */
function FireField()
{
    Orion.Cast('Fire Field');
}

/**
 * Description
 * @method ParalyzeField
 * @return 
 */
function ParalyzeField()
{
    Orion.Cast('Paralyze Field');
}

/**
 * Description
 * @method PoisonField
 * @return 
 */
function PoisonField()
{
    Orion.Cast('Poison Field');
}

/**
 * Description
 * @method EnergyField
 * @return 
 */
function EnergyField()
{
    Orion.Cast('Energy Field');
}


/**
 * Description
 * @method MagicReflect
 * @return 
 */
function MagicReflect()
{
    Orion.Cast('Magic Reflection');
}

/**
 * Description
 * @method Heal
 * @return 
 */
function Heal()
{
    Orion.Cast('Heal');
}

/**
 * Description
 * @method GreaterHeal
 * @return 
 */
function GreaterHeal()
{
    Orion.Cast('Greater Heal');
}

/**
 * Description
 * @method ReactiveArmor
 * @return 
 */
function ReactiveArmor()
{
    Orion.Cast('Reactive Armor');
}

/**
 * Description
 * @method Cure
 * @return 
 */
function Cure()
{
    Orion.Cast('Cure');
}

/**
 * Description
 * @method Bless
 * @return 
 */
function Bless()
{
    Orion.Cast('Bless');
}

/**
 * Description
 * @method Protection
 * @return 
 */
function Protection()
{
    Orion.Cast('Protection');
}

/**
 * Description
 * @method Agility
 * @return 
 */
function Agility()
{
    Orion.Cast('Agility');
}

/**
 * Description
 * @method Invisibility
 * @return 
 */
function Invisibility()
{
    Orion.Cast('Invisibility');
}

/**
 * Description
 * @method Ressurection
 * @return 
 */
function Ressurection()
{
    Orion.Cast("Ressurection");
}

//--#AutoScripts
///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////Working
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////but still need testing
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////  

///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////Teleport 12 tiles forward
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////Dispel nearest/closest field
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method DispelField
 * @return 
 */
function DispelField()
{
    var field, fieldObject, index, fieldIndex;
    var tile = [
        [Player.X(), Player.Y() - 1],
        [Player.X() + 1, Player.Y() - 1],
        [Player.X() + 1, Player.Y()],
        [Player.X() + 1, Player.Y() + 1],
        [Player.X(), Player.Y() + 1],
        [Player.X() - 1, Player.Y() + 1],
        [Player.X() - 1, Player.Y()],
        [Player.X() - 1, Player.Y() - 1]
    ];
    field = Orion.FindType("0x3967|0x0080|0x3956|0x3922", "-1", "ground", "item", 1);
    if (field.length != 0)
    {
        for (index = 0; index < tile.length; index++)
        {
            if (Player.Direction() == index || Player.Direction() == (index + 128))
            {
                for (fieldIndex = 0; fieldIndex < field.length; fieldIndex++)
                {
                    fieldObject = Orion.FindObject(field[fieldIndex]);
                    if (fieldObject.X() == tile[index][0] && fieldObject.Y() == tile[index][1])
                    {
                        Orion.WaitTargetObject(fieldObject.Serial());
                        Orion.Cast("Dispel Field");
                        return;
                    }
                }
                Orion.CharPrint(self, 1153, "Before me there are no fields!")
                break;
            }
        }
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////Aimed Auto-Explosion potion, working 50/50
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Description
 * @method Expl
 * @return 
 */
function Expl()
{
    Orion.ClearJournal();
    Orion.CancelWaitTarget();
    Orion.UseType('0x0F0D');
    WaitForTarget(1500, 10);
    Orion.CancelTarget();

    //
    Orion.WaitJournal('2', Orion.Now(), Orion.Now() + 4000);
    Orion.Wait(250); // <<< SET BASED ON YOUR PING
    Orion.UseType('0x0F0D');
    WaitForTarget(1500, 10);
    //
    if (Orion.GetDistance('lasttarget') > 12)
        ThrowAwayBomb(0);
    else
        Orion.TargetObject('lasttarget');
    ThrowAwayBomb(0);
}

/**
 * Description
 * @method ThrowAwayBomb
 * @param {} a
 * @return 
 */
function ThrowAwayBomb(a)
{
    var dir = Player.Direction();
    if (dir > 100)
        dir -= 128;

    var rX = 0;
    var rY = 0;

    switch (dir)
    {
        case 0:
            rX = 0;
            rY = 3;
            break;
        case 1:
            rX = -3;
            rY = 3;
            break;
        case 2:
            rX = -3;
            rY = 0;
            break;
        case 3:
            rX = -3;
            rY = -3;
            break;
        case 4:
            rX = 0;
            rY = -3;
            break;
        case 5:
            rX = 3;
            rY = -3;
            break;
        case 6:
            rX = 3;
            rY = 0;
            break;
        case 7:
            rX = 3;
            rY = 3;
            break;
        default:
            rX = 3;
            rY = 3;

    }
    Orion.TargetTileRelative(0, rX, rY, 0);
}

/**
 * Description
 * @method WaitForTarget
 * @param {} delay
 * @param {} sensitivity
 * @return 
 */
function WaitForTarget(delay, sensitivity)
{
    var start = 0;
    while (start < delay)
    {
        if (Orion.HaveTarget())
            break;
        Orion.Wait(sensitivity);
        start += sensitivity;
    }
}

/**
 * Description
 * @method AutoStunDetect
 * @return 
 */
function AutoStunDetect()
{
    var msg;

    while (true)
    {
        msg = Orion.WaitJournal('fully stun your opp', Orion.Now(), 0, 'sys');

        if (msg != null)
            Orion.CharPrint(lastattack, '0x0021', 'STUN');

        Orion.Wait(100);
    }
}


/**
 * Description
 * @method kach11
 * @return 
 */
function kach11()
{
    while (true)
    {



        if (Player.Mana() > 95)


            Orion.Cast('Resurrection', 'enemy');
        Orion.Wait(1000);
        Orion.UseSkill('Meditation');
        Orion.Wait(8000);




    }
}


/**
 * Description
 * @method kach
 * @return 
 */
function kach()
{


    while (true)
    {
        if (Player.mana() > 95)
            Orion.EquipT('0x2D20');
        Orion.Wait('30000')

        Orion.UseSkill('Meditation');
    }
}

/**
 * Description
 * @method ExploExploCorpor
 * @return 
 */
function ExploExploCorpor()
{
    Orion.Cast('Explosion');
    Orion.Print('Target enemy with explosion spell');
    Orion.WaitForTarget(4000);
    while (Orion.HaveTarget())
    {
        Orion.Wait(100);
    }
    Orion.Print('?????? ?????????');
    BeforeAction = Orion.Now();
    AfterAction = BeforeAction + 4000;
    if (Orion.UseType('0x0F0D', '0x0000'))
    {
        Orion.Print('????? ?????');
        Orion.WaitForTarget(4000);
        if (Orion.HaveTarget())
        {
            Orion.Print('Canceling explosion potion');
            Orion.CancelTarget();
        }
    }
    Orion.Cast('Energy bolt');
    Orion.WaitForTarget(4000);
    if (Orion.HaveTarget())
    {
        Orion.Print('Targeting Energy bolt');
        Orion.TargetObject('lastattack');
    }
    Orion.WaitJournal('2', BeforeAction, AfterAction, 'my');
    if (Orion.UseType('0x0F0D', '0x0000'))
    {
        Orion.WaitForTarget(4000);
        if (Orion.HaveTarget())
            Orion.Print('Throwing explosion potion');
        Orion.TargetObject('lastattack');
    }
}

/**
 * Description
 * @method Autoscavenger
 * @return Literal
 */
function Autoscavenger()
{
    while (true)
    {
        if (Player.Dead())
        {
            Orion.Wait(500);
            continue;
        }
        var list = Orion.FindList('sca', 'ground', '', 2)
        for (var i = 0; i < list.length; i++)
        {
            Orion.MoveItem(list[i], 0, backpack);
            Orion.Wait('moveitemdelay');
        }
    }
    return true;
}

/**
 * Description
 * @method Rezka
 * @return 
 */
function Rezka()
{
    var corpses = Orion.FindType('0x2006', '-1', ground, '', '2');

    //Проход по всем найденным трупам
    for (var c = 0; c < corpses.length; c++)
    {
        var serial = corpses[c]
        Orion.WaitTargetObject(self);
        Orion.UseTypeList('knife');
        Orion.Wait(650);
    }
}

/**
 * Description
 * @method FS
 * @return 
 */
function FS()
{

    Orion.UseType('0x1F5F');
    Orion.Cast('Flame strike');
}

/**
 * Description
 * @method closeDoor
 * @return 
 */
function closeDoor()
{
    var porta = Orion.FindType(
        '0x3ED5|0x3ED4|0x0676|0x0678|0x067A|0x067C|0x067E|0x0680|0x0682|0x0684|0x0686|0x0688|0x068A|0x068C|0x068E|0x0690|0x0692|0x0694|0x0696|0x0698|0x069A|0x069C|0x069E|0x06A0|0x06A2|0x06A4|0x06A6|0x06A8|0x06AA|0x06AC|0x06AE|0x06B0|0x06B2|0x06B4|0x06B6|0x06B8|0x06BA|0x06BC|0x06BE|0x06C0|0x06C2|0x06C4|0x06C6|0x06C8|0x06CA|0x06CC|0x06CE|0x06D0|0x06D2|0x06D4|0x06D6|0x06D8|0x06DA|0x06DC|0x06DE|0x06E0|0x06E2|0x06E4|0x06E6|0x06E8|0x06EA|0x06EC|0x06EE|0x06F0|0x06F2|0x06F4|0x06F6|0x0825|0x0827|0x0829|0x082A|0x082C|0x082E|0x0831|0x0833|0x083A|0x083C|0x083E|0x0840|0x0842|0x0844|0x0846|0x0848|0x084D|0x084F|0x0851|0x0853|0x0855|0x0857|0x0859|0x085B|0x0867|0x0869|0x086B|0x086D|0x086F|0x0871|0x0873|0x0875|0x1FEE|0x1FF0|0x1FF2|0x1FF4|0x1FF6|0x1FF8|0x1FFA|0x1FFC|0x00E9|0x00EB|0x00ED|0x00EF|0x00F1|0x00F3|0x00F5|0x00F7|0x0315|0x0317|0x0319|0x031B|0x031D|0x031F|0x0321|0x0323|0x0325|0x0327|0x0329|0x032B|0x032D|0x032F|0x0331|0x0333|0x0335|0x0337|0x0339|0x033B|0x033D|0x033F|0x0341|0x0343|0x0345|0x0347|0x0349|0x034B|0x034D|0x034F|0x0351|0x0353|0x0355|0x0357|0x0359|0x035B|0x035D|0x035F|0x0361|0x0363',
        '-1', ground, '', 2);
    if (porta != null && porta.length)
    {
        Orion.Print('-1', 'Closing Doors');
        var quantity = porta.length;
        for (i = 0; i < quantity; i++)
        {
            Orion.UseObject(porta);
            Orion.Wait(30);
        }
    }
}



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////ТАЙМЕР//////////////////////////////////////////////////////////////////////////////
//=========================================================================================================//

//===================================================================================

/**
 * Description
 * @method Tamer
 * @return 
 */
function Tamer()
{
    Orion.ClearTimers();
    petOne = Orion.FindObject('petOne');
    petTwo = Orion.FindObject('petTwo');
    Orion.ClearJournal();
    Orion.CancelTarget();
    Orion.Say('all guard me');
    Orion.SetTimer('Guard', 0);
    Orion.Wait(300);
    Orion.Cast('Magic Reflection', self);
    Orion.SetTimer('Protect', 0);
    Orion.Wait(600);

    if (Orion.InJournal('already', 'sys|my'))
    {
        Orion.Print('63', '   Вы уже под рефлектом');
    }
    while (true)
    {
        var monster = Orion.FindType('!0x0190|!0x0191|!0x00E8', '0xFFFF', ground, 'near|mobile|ignorefriends',
            '10', 'gray|red|criminal|enemy');

        Orion.IgnoreReset();

        if (monster.length)
        {
            Orion.CharPrint(monster, 54, '*');
            Orion.RemoveObject("target");
            Orion.AddObject("target", monster[0]);
            var target = Orion.FindObject("target");
            Orion.WaitTargetObject("target");
            Orion.InvokeVirture('Honor');
            Orion.Attack("target");
            Orion.Wait(1000);
        }
        while (Player.Poisoned() && Player.Hits() < 30)
        {
            Orion.CancelWaitTarget();
            Orion.Say('[drink GreaterCurePotion');
            Orion.Wait(500);
            if (Player.Hits() < 30)
            {
                Orion.CancelWaitTarget();
                Orion.Say('[drink GreaterHealPotion');
                Orion.Wait(200);
            }
        }

        while (Player.Poisoned())
        {
            Orion.CancelWaitTarget();
            Orion.CancelTarget();
            Orion.Wait(200);
            Orion.Cast('Cure', self);
            Orion.Wait(500);
        }
        if (Player.Hits() < 30)
        {
            Orion.Say('[drink GreaterHealPotion');
            Orion.Wait(500);
            Orion.CancelWaitTarget();
            Orion.Wait(200);
            Orion.Cast('Heal', self);
            Orion.Wait(700);
        }

        if (Player.Hits() < 80)
        {
            Orion.Wait(300);
            Orion.CancelWaitTarget();
            Orion.Cast('Heal', self);
            Orion.Wait(700);
        }
        if (Orion.GetDistance(petOne.Serial()) > 8 && Orion.GetDistance(petTwo.Serial()) > 8)
        {
            while (Orion.GetDistance(petOne.Serial()) > 1 && Orion.GetDistance(petTwo.Serial()) > 1)
            {
                Orion.Say('all follow me');
                Orion.Wait(1000);
            }
            Orion.Say('all guard me');
            Orion.SetTimer('Guard', 0);
        }

        if (Orion.Timer('Guard') > 20000)
        {
            Orion.CancelWaitTarget();
            Orion.Say('all guard me');
            Orion.SetTimer('Guard', 0);
        }
        if (Orion.Timer('Protect') > 200000)
        {
            Orion.CancelTarget();
            Orion.Cast('Magic Reflection', self);;
            Orion.SetTimer('Protect', 0);
        }

        if (Player.Hits() > 95)
            Orion.OpenContainer("backpack", 0);
        Orion.Wait(200);
        {
            if (Orion.Count(0x0F85) < 5)
            {
                Orion.Print('33', '   Ginseng = [' + Orion.Count(0x0F85, '0', 'backpack') + ']');
                Orion.Wait(1000);
            }
            if (Orion.Count(0x0F88) < 5)
            {
                Orion.Print('33', '   Nightshade = [' + Orion.Count(0x0F88, '0', 'backpack') + ']');
                Orion.Wait(1000);
            }
            if (Orion.Count(0x0F86) < 10)
            {
                Orion.Print('33', '   Mandrake Root = [' + Orion.Count(0x0F86, '0', 'backpack') + ']');
                Orion.Wait(1000);
            }
            if (Orion.Count(0x0F8C) < 5)
            {
                Orion.Print('33', '   Sulfurous Ash = [' + Orion.Count(0x0F8C, '0', 'backpack') + ']');
                Orion.Wait(1000);
            }
            if (Orion.Count(0x0F84) < 5)
            {
                Orion.Print('33', '   Garlic = [' + Orion.Count(0x0F84, '0', 'backpack') + ']');
                Orion.Wait(1000);
            }
            if (Orion.Count(0x0F7A) < 5)
            {
                Orion.Print('33', '   Black Perl = [' + Orion.Count(0x0F7A, '0', 'backpack') + ']');
                Orion.Wait(1000);
            }
            if (Orion.Count(0x0F7B) < 5)
            {
                Orion.Print('33', '   Blood Moss  = [' + Orion.Count(0x0F7B, '0', 'backpack') + ']');
                Orion.Wait(1000);
            }
            if (Orion.Count(0x0F8D) < 5)
            {
                Orion.Print('33', '   Spider Silk = [' + Orion.Count(0x0F8D, '0', 'backpack') + ']');
                Orion.Wait(1000);
            }
        }

        Orion.Wait(200);
    }
    Orion.Wait(200);
}



//======================================================== Провокация =========================================================//

/**
 * Description
 * @method A_AutoProvokation
 * @return 
 */
function A_AutoProvokation()

{
    var msg1 = "shall you play";
    var msg2 = "start";
    var msg3 = "too far away from each other";

    Orion.CancelWaitTarget();
    Orion.IgnoreReset();
    Orion.Ignore(self, true);
    var music = Orion.FindType('0x2805|0x0E9D|0x0E9C|0x0EB3|0x0EB2|0x0EB1|0x0E9E', '-1', backpack);
    var monster = Orion.FindType('!0x0190|!0x0191|!0x00E8', '0xFFFF', ground, 'near|mobile|ignorefriends',
        '14', 'gray|red|criminal|enemy');
    var player = Orion.FindType('0x0190|0x0191', '0xFFFF', ground, 'human|near|mobile|ignorefriends', '18',
        'red|gray|criminal|enemy');


    if (!music.length)
    {
        Orion.Print(33, '         В паке НЕТ инструментов');
        Orion.Wait(1000)
        return;
    }
    Orion.RemoveObject('Instrument');
    Orion.AddObject("Instrument", music[0]);

    if (player.length && !monster.length)
    {
        Orion.RemoveObject("temp_player");
        Orion.AddObject("temp_player", player[0]);
        Orion.ShowStatusbar(player, 65, 65, true);
        Orion.Say('all follow me');
        Orion.Wait(200);
        Orion.CancelWaitTarget();
        Orion.Say('all kill');
        Orion.WaitTargetObject(player[0]);
        Orion.Wait(1000);
        return;
    }

    if (!monster.length)
    {
        Orion.Print(33, "   Мобов НЕТ");
        Orion.Wait(1000);
        return;
    }

    if (player.length && monster.length)
    {
        Orion.CharPrint(monster, 54, '[Цель 1]');
        Orion.RemoveObject("temp_player");
        Orion.AddObject("temp_player", player[0]);
        Orion.ShowStatusbar(player, 65, 65, true);
        Orion.CharPrint(player, 33, '[Цель ПК]');
        Orion.CancelWaitTarget();
        Orion.WaitTargetObject([monster[0], player[0]]);
        Orion.ClearJournal(msg1);
        Orion.UseSkill('Provocation');
        Orion.Wait(600);
        Orion.RemoveObject("temp_player");
        Orion.AddObject("temp_player", player[0]);
        Orion.ShowStatusbar(player, 65, 65, true);
        Orion.CancelWaitTarget();
        Orion.CancelTarget();
        Orion.Say('all kill');
        Orion.WaitTargetObject(player[0]);
        Orion.Wait(1000);
        return;
    }

    if (monster.length)
    {
        Orion.RemoveObject("temp_target1");
        Orion.AddObject("temp_target1", monster[0]);
        Orion.ShowStatusbar(monster, 800, 65, true);
        Orion.CharPrint(monster, 54, '[Цель 1]');
        target = monster[0];
        Orion.Ignore(target, true);
        monster2 = Orion.FindType('!0x0190|!0x0191|!0x00E8', '0xFFFF', ground, 'near|mobile|ignorefriends',
            '14', 'gray|red|criminal|enemy');

        if (!monster2.length)
        {
            Orion.CloseStatusbar('temp_target1');
            Orion.Print(54, "         НЕТ второго моба");
            Orion.IgnoreReset();
            Orion.Wait(1000);
            return;
        }
        Orion.RemoveObject("temp_target2");
        Orion.AddObject("temp_target2", monster2[0]);
        Orion.ShowStatusbar(monster2, 800, 135, true);
        Orion.CharPrint(monster2, 54, '[Цель 2]');
        Orion.WaitTargetObject([monster2[0], target]);
    }
    Orion.ClearJournal(msg1);
    Orion.UseSkill('Provocation');
    Orion.Wait(1000);

    if (Orion.InJournal(msg2, 'sys|my'))
    {
        Orion.Say('[e woohoo');
        Orion.Wait(6000);
        Orion.CloseStatusbar('temp_target1');
        Orion.CloseStatusbar('temp_target2')
    }
    if (Orion.InJournal(msg3, 'sys'))
    {
        Orion.Print(33, "   Мобы ДАЛЕКО друг от друга");
        Orion.CloseStatusbar('temp_target1');
        Orion.CloseStatusbar('temp_target2')
        Orion.Wait(500);
        return;
    }
    if (Orion.InJournal(msg1, 'sys'))
    {
        Orion.UseObject('Instrument');
        Orion.Wait(1000);
        return;
    }

    Orion.CloseStatusbar('temp_target1');
    Orion.CloseStatusbar('temp_target2')
    Orion.IgnoreReset();
    Orion.Wait(300);
    Orion.CancelWaitTarget();
}

/**
 * Description
 * @method A_HealTwoPets
 * @return 
 */
function A_HealTwoPets()
{
    var corpses = Orion.FindType('0x2006', '-1', ground, '', 2);
    var textColor1 = 63;
    var textColor2 = 54;
    var textColor3 = 33;
    var petOne = Orion.FindObject('petOne');
    if (petOne == null || petOne == 0)
    {
        Orion.Print(textColor1, 'Выберите первого пета ->  ');
        Orion.AddObject('petOne');
        while (Orion.HaveTarget())
        {
            Orion.Wait('50');
        }
        petOne = Orion.FindObject('petOne');
    }
    var petTwo = Orion.FindObject('petTwo');
    if (petTwo == null || petTwo == 0)
    {
        Orion.Print(textColor2, 'Выберите второго пета ->  ');
        Orion.AddObject('petTwo');
        while (Orion.HaveTarget())
        {
            Orion.Wait('50');
        }
        petTwo = Orion.FindObject('petTwo');
    }
    var Timer, Msg = "cured|finish|barely|little|close";
    Orion.ShowStatusbar('petOne', 50, 50, true);
    Orion.ShowStatusbar('petTwo', 50, 150, true);
    while (true)
    {
        var petOneHpPercentage = petOne.Hits() * 100 / petOne.MaxHits();
        var petTwoHpPercentage = petTwo.Hits() * 100 / petTwo.MaxHits();
        if (petOneHpPercentage < 98 || petTwoHpPercentage < 98)
        {
            if ((petOne.Hits() * 100 / petOne.MaxHits()) < (petTwo.Hits() * 100 / petTwo.MaxHits()) || (petOne
                    .Hits() * 100 / petOne.MaxHits()) == (petTwo.Hits() * 100 / petTwo.MaxHits()))
            {
                if (Orion.GetDistance(petOne.Serial()) > 1)
                {
                    Orion.Print(textColor1, 'Подойдите ближе к -> [' + petOne.Name() + ']');
                    Orion.Wait(2000);
                    continue;
                }
                else
                {
                    Orion.BandageTarget('petOne');
                    Orion.Print(textColor1, 'Лечим - [' + petOne.Name() + ']');
                    if (Orion.InJournal('You begin applying the bandages', 'sys'))
                        Orion.ClearJournal(Msg);
                    Timer = Orion.Now() + 9000;
                    while (!Orion.InJournal(Msg) && Orion.Now() < Timer)
                    {
                        Orion.Wait(500);
                    }
                }
                if (Orion.Count('0x0E21') < 10)
                {
                    Orion.Print(textColor3, '[' + Orion.Count('0x0E21') + '] бинтов осталось ! ');
                }
            }
            else
            {
                if (Orion.GetDistance(petTwo.Serial()) > 1)
                {
                    Orion.Print(textColor2, "Подойдите ближе к -> [" + petTwo.Name() + ']');
                    Orion.Wait(2000);
                    continue;
                }
                else
                {
                    Orion.BandageTarget('petTwo');
                    Orion.Print(textColor2, 'Лечим - [' + petTwo.Name() + ']');
                    if (Orion.InJournal('You begin applying the bandages', 'sys'))
                        Orion.ClearJournal(Msg);
                    Timer = Orion.Now() + 9000;
                    while (!Orion.InJournal(Msg) && Orion.Now() < Timer)
                    {
                        Orion.Wait(500);
                    }
                }
            }
            if (Orion.Count('0x0E21') < 10)
            {
                Orion.Print(textColor3, '[' + Orion.Count('0x0E21') + '] бинтов осталось ! ');
            }
        }
        Orion.Wait(200);
    }
}

//============================================================= Проверка на перевес ===================================================================//

/**
 * Description
 * @method check_weight
 * @return 
 */
function check_weight()
{
    var weightPercentage = Player.Weight() * 100 / Player.MaxWeight();
    if (weightPercentage < 95)
    {
        return;
    }
    if (weightPercentage >= 95)
    {
        Orion.Say('[e oops');
        Orion.Print('54', 'ВНИМАНИЕ перевес');
        Orion.Wait(1000);
    }
}


/**
 * Description
 * @method ClaimList
 * @return 
 */
function ClaimList()
{
    Orion.Say('Claim list');
}

/**
 * Description
 * @method StablePet
 * @return 
 */
function StablePet()
{
    Orion.Say('Stable pet');
}


//===================================================== Warpack =====================================================//


//==  Warpack ==//
// Ресток регов и бинтов. Если не хватает то добирает, если лишнее то кладет обратно в сундук

/**
 * Description
 * @method WarPack
 * @return 
 */
function WarPack()
{
    var Index, Resource, ResourceObject, Quantity;
    var Items = [
        ["Black Pearls", "0x0F7A", "-1", 70, 30, 30], // 40 - количество регов, можно изменить на нужное
        ["Blood Moss", "0x0F7B", "-1", 100, 30, 30], // 40 - количество регов, можно изменить на нужное
        ["Garlic", "0x0F84", "-1", 100, 30, 30], // 30 - количество регов, можно изменить на нужное
        ["Ginseng", "0x0F85", "-1", 100, 30, 0], // 30 - количество регов, можно изменить на нужное
        ["Mandrake Roots", "0x0F86", "-1", 100, 30,
            30
        ], // 40 - количество регов, можно изменить на нужное
        ["Nightshade", "0x0F88", "-1", 70, 30, 30], // 30 - количество регов, можно изменить на нужное
        ["Sulfurous Ash", "0x0F8C", "-1", 100, 30, 30], // 30 - количество регов, можно изменить на нужное
        ["Spider's Silk", "0x0F8D", "-1", 100, 30, 30], // 30 - количество регов, можно изменить на нужное
        ["Bandage", "0x0E21", "-1", 250, 65, 30] // 100 - количество бинтов, можно изменить на нужное
    ];
    Orion.RemoveObject("ResourceBag");
    Orion.RemoveObject("TargetBag");
    Orion.Print(63, '      Select resource chest -- >  ');
    Orion.AddObject("ResourceBag");
    while (Orion.HaveTarget())
    {
        Orion.Wait(100);
    }
    Orion.Wait(400);
    Orion.Print(54, '       Select target pack  -- >  ');
    Orion.AddObject("TargetBag");
    while (Orion.HaveTarget())
    {
        Orion.Wait(100);
    }
    Orion.Wait(500);
    Orion.OpenContainer("TargetBag", 1000);
    Orion.Wait(500);
    Orion.OpenContainer("ResourceBag", 1000);
    for (Index = 0; Index < Items.length; Index++)
    {
        Resource = Orion.FindType(Items[Index][1], Items[Index][2], "TargetBag");
        if (Resource.length != 0)
        {
            ResourceObject = Orion.FindObject(Resource[0]);
            if (Items[Index][3] == ResourceObject.Count())
            {
                continue;
            }
            if (Items[Index][3] < ResourceObject.Count())
            {
                Quantity = ResourceObject.Count() - Items[Index][3];
                Orion.Wait('moveitemdelay');
                Orion.MoveItem(ResourceObject.Serial(), Quantity, "ResourceBag");
                continue;
            }
            if (Items[Index][3] > ResourceObject.Count())
            {
                Quantity = Items[Index][3] - ResourceObject.Count();
            }
        }
        else
        {
            Quantity = Items[Index][3];
        }
        Resource = Orion.FindType(Items[Index][1], Items[Index][2], "ResourceBag");
        if (Resource.length != 0)
        {
            ResourceObject = Orion.FindObject(Resource[0]);
            if (ResourceObject.Count() >= Quantity)
            {
                if (Items[Index][3] != Quantity)
                {
                    Orion.Wait('moveitemdelay');
                    Orion.MoveItem(ResourceObject.Serial(), Quantity, "TargetBag");
                }
                else
                {
                    Orion.Wait('moveitemdelay');
                    Orion.MoveItem(ResourceObject.Serial(), Quantity, "TargetBag", Items[Index][4], Items[
                        Index][5], 0);
                }
            }
            else
            {
                Orion.Print(54, ' Not enough [' + Items[Index][0] + ']');
                return;
            }
        }
        else
        {
            Orion.Print(54, ' Not enough [' + Items[Index][0] + ']');
            return;
        }
        Orion.Wait(100);
    }
    Orion.Wait(1000);
    Orion.Print(163, "   Ginseng = " + Orion.Count(0x0F85, '0', 'ResourceBag'));
    Orion.Print(163, "   Nightshade = " + Orion.Count(0x0F88, '0', 'ResourceBag'));
    Orion.Print(163, "   Mandrakeroot = " + Orion.Count(0x0F86, '0', 'ResourceBag'));
    Orion.Print(163, "   Sulfurous Ash = " + Orion.Count(0x0F8C, '0', 'ResourceBag'));
    Orion.Print(163, "   Garlic = " + Orion.Count(0x0F84, '0', 'ResourceBag'));
    Orion.Print(163, "   Black Pearl = " + Orion.Count(0x0F7A, '0', 'ResourceBag'));
    Orion.Print(163, "   Blood Moss = " + Orion.Count(0x0F7B, '0', 'ResourceBag'));
    Orion.Print(163, "   Spiders Silk = " + Orion.Count(0x0F8D, '0', 'ResourceBag'));
    Orion.Print(163, "   Bandage = " + Orion.Count(0x0E21, '0', 'ResourceBag'));
    Orion.Wait(1000);
    Orion.Print(54, '          WarPack set UP');
}



/**
 * Description
 * @method A_ProtectionPK
 * @return 
 */
function A_ProtectionPK()
{
    while (!Player.Dead())
    {
        var pk = Orion.FindType('-1', '-1', ground, 'human|live', '30', 'red');
        if (pk.length > 0)
        {

            Orion.CancelTarget();
            Orion.Cast('Recall');
            Orion.WaitTargetObject('Runebook');
            Orion.Wait(300);
        }
        Orion.Wait(100);
    }
}


/**
 * Description
 * @method A_Rogue
 * @return 
 */
function A_Rogue()
{
    while (!Player.Dead())
    {
        var monster = Orion.FindType('!0x0190|!0x0191|!0x00E8|!0x00A4', '0xFFFF', ground,
            'near|mobile|ignorefriends', '10', 'gray|red|criminal|enemy');
        if (!monster.length)
        {
            Orion.Print('54', 'Нет целей');
            Orion.Wait(2000);
            Orion.IgnoreReset();
            continue;
        }
        Orion.CharPrint(monster, 54, '*');
        Orion.RemoveObject("target");
        Orion.AddObject("target", monster[0]);
        var target = Orion.FindObject("target");
        //        Orion.WalkTo(target.X(),target.Y(),1);
        Orion.WaitTargetObject("target");
        Orion.InvokeVirture('Honor');
        Orion.Attack("target");
        Orion.Ignore(target, true);
        Orion.Wait(1000);
    }
}



//======================================================== Тайминг  2 ============================================================//
/**
 * Description
 * @method A_M_TameAnimal
 * @return 
 */
function A_M_TameAnimal()
{

    var Arr = [
        ["lava lizard 1", "0x00CE", "0x0674"],
        ["lava lizard 2", "0x00CE", "0x0659"],
        ["lava lizard 3", "0x00CE", "0xFFFF"],
        ["lava lizard 4", "0x00CE", "0x0662"],
        ["hellcat 1", "0x00C9", "0x0647"],
        ["hellcat 2", "0x00C9", "0x0662"],
        ["hellcat 3", "0x00C9", "0x0674"],
        ["hellcat 4", "0x00C9", "0x0659"],
        ["hellcat 4", "0x00C9", "0x066B"],
        ["hellcat 4", "0x00C9", "0x0650"],
        ["hellcat big 1", "0x007F", "0x0000"],
        ["hell hound 1", "0x0062", "0x0000"]

    ];
    for (var i = 0; i < Arr.length; i++)
    {
        Orion.AddFindList("Animals", Arr[i][1], Arr[i][2], Arr[i][0]);
    }
    while (!Player.Dead())
    {
        var creatures = Orion.FindList('Animals', ground, 'near|mobile', '12', 'gray|criminal|enemy');
        var msg = "as master|looks|fail|no chance|too many|even chalenging|angry";
        var msg1 = "you play hypnotic";
        var msg2 = "already";
        var msg4 = "fail|too angry";
        var msg5 = "as master|looks";
        var msg6 = "reagents";
        var msg7 = "too far|clear path";

        Orion.ClearJournal();

        if (!creatures.length)
        {
            Orion.ClearJournal(msg6);
            while (Player.Hits() <= Player.MaxHits() - 30)
            {
                Orion.CancelTarget();
                Orion.Cast('Greater Heal');
                Orion.WaitTargetObject(Player.Serial());
                Orion.Wait(3000);
            }
            //		Orion.WalkTo(5977, 1347, Player.Z(), 0);
            Orion.Print('54', '      Поиск животных');
            Orion.IgnoreReset();
            Orion.Wait(2500);
            continue;
        }
        Orion.RemoveObject("target");
        Orion.AddObject("target", creatures[0]);
        var target = Orion.FindObject("target");
        Orion.CharPrint(creatures, 63, '*');

        if (Orion.GetDistance(target.Serial()) < 3)
        {
            Orion.ClearJournal(msg1);
            Orion.ClearJournal(msg7);
            Orion.UseSkill('Peacemaking', 'target');
            BeforeAction = Orion.Now();
            AfterAction = Orion.Now() + 6500;

            while (Orion.WaitJournal(msg2, BeforeAction, AfterAction, ''))
            {
                Orion.Wait(500);
            }
            Orion.Wait(100);
            Orion.WarMode(true);
            Orion.Wait(300);
            Orion.WarMode(false);
            Orion.ClearJournal(msg6);


            while (Player.Hits() < 80)
            {
                Orion.CancelTarget();
                Orion.Cast('Heal');
                Orion.WaitTargetObject(Player.Serial());
                Orion.Wait(1500);
            }

            while (target.Exists())
            {
                if (Orion.InJournal(msg7, 'sys'))
                {
                    Orion.Print(54, '      Далеко до цели - >  ');
                    Orion.Wait(500);
                    break;
                }
                if (Player.Hits() < 88)
                {
                    Orion.Wait(500);
                    break;
                }
                Orion.ClearJournal(msg);
                BeforeAction = Orion.Now();
                AfterAction = Orion.Now() + 13000;
                Orion.UseSkill('Animal Taming', "target");
                if (Orion.WaitJournal(msg4, BeforeAction, AfterAction, ''))
                {
                    Orion.Wait(500);
                    continue;
                }
                if (Orion.InJournal(msg7, 'sys'))
                {
                    Orion.Print(54, '      Далеко до цели - >  ');
                    Orion.Wait(500);
                    break;
                }
                Orion.RenameMount('target', 'killer');
                Orion.Wait(1000);
                if (Orion.Contains(target.Name(), "killer"))
                {
                    Orion.CancelWaitGump();
                    Orion.WaitGump(Orion.CreateGumpHook(2));
                    Orion.Say('killer release');
                    Orion.Wait(2000);
                    Orion.UseObject('self');
                    Orion.Wait(300);
                    Orion.Say("all stay");
                    Orion.Wait(300);
                    Orion.Say('all kill');
                    Orion.WaitTargetObject('target');
                    Orion.Wait(100);
                    while (target.Exists())
                    {
                        Orion.Wait(1500);
                    }
                    if (!target.Exists() && Orion.GetDistance('myMount') > 2)
                    {
                        Orion.Wait(300);
                        Orion.Say('All Come');
                        Orion.Wait(3500);
                        Orion.UseObject('myMount');
                    }
                    else
                    {
                        Orion.Wait(400);
                        Orion.UseObject('myMount');
                    }
                }

                Orion.Wait(200);
            }
        }
        Orion.Wait(200);
    }
}

/**
 * Description
 * @method AddFriend
 * @return 
 */
function AddFriend()
{
    Orion.AddObject("temp");
    while (Orion.HaveTarget())
    {
        Orion.Wait(100);
    }
    Orion.AddFriend(Orion.RequestName("temp"), "temp");
}

/**
 * Description
 * @method Attack
 * @return 
 */
function Attack()
{

    var monster = Orion.FindType("0xFFFF", "0xFFFF", ground, 'near|mobile|ignorefriends', '14',
        'red|gray|criminal');
    var enemy = Orion.FindObject('temp_enemy');
    var notoColor;

    if (!monster.length)
    {
        Orion.Print('134', "      мобов НЕТ");
        return;
    }
    //     if (monster.length)
    //     {
    Orion.Wait(300);
    //      Orion.RemoveObject('temp_enemy');
    //      Orion.Wait(100);
    //      Orion.AddObject("temp_enemy",monster[0]); 
    //	Orion.Wait(300);
    //	switch (enemy.Notoriety() )
    //	{
    //	case 1: notoColor = 2119;
    //		break;
    //	case 3: notoColor = 906;
    //		break;
    //	case 6: notoColor = 33;
    //		break;
    //	default: notoColor = 906;
    //	}
    //Orion.CharPrint(self, notoColor, '   Враг - ' + enemy.Name() );
    Orion.Say('all kill');
    Orion.WaitTargetObject(monster[0]);

}
//}

/**
 * Description
 * @method checklag
 * @param {} TimeOut
 * @return 
 */
function checklag(TimeOut)
{
    BeforeAction = Orion.Now();
    AfterAction = Orion.Now() + TimeOut;
    Orion.Click(backpack);
    Orion.WaitJournal('backpack', BeforeAction, AfterAction, '');
}

//========================================================================//

// Setup Arm Set 
/**
 * Description
 * @method SetArm1
 * @return 
 */
function SetArm1()
{
    Orion.Arm('Wep1');
}
// Setup Arm Set 2
/**
 * Description
 * @method SetArm2
 * @return 
 */
function SetArm2()
{
    Orion.Arm('Wep2');
}

/**
 * Description
 * @method Setdress1
 * @return 
 */
function Setdress1()
{
    Orion.Dress('dress1');
}

/**
 * Description
 * @method Setdress2
 * @return 
 */
function Setdress2()
{
    Orion.Dress('dress2');
}

//Set Arm Shield
/**
 * Description
 * @method SetArmShield
 * @return 
 */
function SetArmShield()
{
    Orion.SetArm('Shield');
}

/**
 * Description
 * @method Equip1H
 * @return 
 */
function Equip1H()
{
    Orion.Arm('Wep1');
}

/**
 * Description
 * @method Equip1H2
 * @return 
 */
function Equip1H2()
{
    if (Orion.ObjAtLayer('LeftHand') == null)
    {
        Orion.Dress('Wep1');
    }
    else
    {
        Orion.Unequip('LeftHand');
        Orion.Wait(600);
        Orion.Dress('Wep1');
    }
}

/**
 * Description
 * @method Equip2H2
 * @return 
 */
function Equip2H2()
{
    if (Orion.ObjAtLayer('RIghtHand') == null)
    {
        Orion.Dress('Wep2');
    }
    else
    {
        Orion.Unequip('RightHand');
        Orion.Wait(600);
        Orion.Dress('Wep2');
    }
}

/**
 * Description
 * @method EquipShield
 * @return 
 */
function EquipShield()
{
    Orion.Dress('Shield');
}

//========================================================================//

/**
 * Description
 * @method MassMove
 * @return 
 */
function MassMove()
{
    Orion.Print('Select model item');
    Orion.AddObject('model');

    while (Orion.HaveTarget())
    {
        Orion.Wait(20);
    }

    var obj = Orion.FindObject('model', 'recurse');

    if (obj == null || !obj.Exists())
        return;

    Orion.Print('Select container receiver');
    Orion.AddObject('receiver');
    while (Orion.HaveTarget())
    {
        Orion.Wait(20);
    }

    var list = Orion.FindType(obj.Graphic(), '-1', obj.Container());

    for (var i = 0; i < list.length; i++)
    {
        Orion.MoveItem(list[i], 0, 'receiver');
        Orion.Wait(600);
    }
}

/**
 * Description
 * @method tele
 * @return 
 */
function tele()
{
    var value = 12;
    var empty = 0;

    var offset = [
        [empty, -value], //direction = 0
        [value, -value], //direction = 1
        [value, empty], //direction = 2
        [value, value], //direction = 3
        [empty, value], //direction = 4
        [-value, value], //direction = 5
        [-value, empty], //direction = 6
        [-value, -value] //direction = 7
    ];

    var xy = offset[Player.Direction() & 7];
    Orion.WaitTargetTileRelative('0', xy[0], xy[1], Player.Z());
    Orion.Cast('Teleport');
}

/**
 * Description
 * @method GH_tamer_skrip_off
 * @return 
 */
function GH_tamer_skrip_off()
{
    Orion.Terminate("Tamer");
    Orion.Terminate("Tamer_s_provo");
    //Orion.Terminate("A_HealTwoPets");

    Orion.CancelWaitTarget();

    Orion.Cast('Greater Heal');
    //Orion.Wait(6000);

    //Orion.CancelTarget();
    //Orion.Exec("Tamer", true);
    //Orion.Exec("A_HealTwoPets", true);
}


/**
 * Description
 * @method Steal_Protection
 * @return 
 */
function Steal_Protection()
{
    Orion.ClearIgnoreList('Temp');
    while (true)
    {
        Orion.UseIgnoreList("Temp");
        var safeBag = Orion.FindObject('safeBag');
        if (safeBag == null || safeBag == 0)
        {
            Orion.Print(54, '   Choose Safe Bag ->  ');
            Orion.AddObject('safeBag');
            while (Orion.HaveTarget())
            {
                Orion.Wait('50');
            }
            var safeBag = Orion.FindObject('safeBag');
            if (safeBag == null || !safeBag.Exists())
            {
                Orion.Print('33', '     - you miss -');
                return;
            }
        }
        var all = Orion.FindType('0x2AA4|0x14F0|0x2260', '0xFFFF', backpack); //  all

        if (all.length != 0)
        {
            for (var i = 0; i < all.length; i++)
            {
                var serial = all[i]
                Orion.Wait('moveitemdelay');
                Orion.CancelWaitTarget();
                Orion.CancelTarget();
                Orion.MoveItem(all[i], 0, 'safeBag');
                Orion.AddIgnoreListObject("Temp", serial, 'PS / Relic / SS');
            }
        }
        Orion.Wait(200);
    }
}


/**
 * Description
 * @method Tamer_s_provo
 * @return 
 */
function Tamer_s_provo()
{
    var reagID = Orion.FindType('0x0F8D|0x0F8C|0x0F84|0x0F7A|0x0F7B|0x0F85|0x0F86|0x0F88', '-1', 'backpack',
        true);
    Orion.OpenContainer("backpack", 200);
    Orion.Wait(1000);
    Orion.ClearTimers();
    petOne = Orion.FindObject('petOne');
    petTwo = Orion.FindObject('petTwo');
    Orion.ClearJournal();
    Orion.CancelTarget();
    Orion.Say('all guard me');
    Orion.SetTimer('Guard', 0);
    Orion.Wait(300);
    if (reagID.length)
    {
        Orion.Cast('Magic Reflection', self);
    }
    Orion.SetTimer('Protect', 0);
    Orion.Wait(600);

    if (Orion.InJournal('already', 'sys|my'))
    {
        Orion.Print('63', '   You are under REFLECTION now');
    }
    while (true)
    {
        var monster = Orion.FindType('!0x0190|!0x0191|!0x00E8|!0x00A4', '0xFFFF', ground,
            'near|mobile|ignorefriends', '10', 'gray|red|criminal|enemy');
        var reagID = Orion.FindType('0x0F8D|0x0F8C|0x0F84|0x0F7A|0x0F7B|0x0F85|0x0F86|0x0F88', '-1',
            'backpack', true);
        Orion.IgnoreReset();
        if (monster.length)
        {
            Orion.CharPrint(monster, 54, '*');
            Orion.RemoveObject("target");
            Orion.AddObject("target", monster[0]);
            var target = Orion.FindObject("target");
            Orion.WaitTargetObject("target");
            Orion.InvokeVirture('Honor');
            Orion.Attack("target");

            if (!Orion.TimerExists('Provok'))
            {
                Orion.SetTimer('Provok', 0);
            }
            if (Orion.Timer('Provok') > 10000)
            {
                Provok();
                Orion.SetTimer('Provok', 0);
            }
            Orion.Wait(300);
        }
        while (Player.Poisoned() && Player.Hits() < 30)
        {
            Orion.CancelWaitTarget();
            Orion.Say('[drink GreaterCurePotion');
            Orion.Wait(300);
            if (Player.Hits() < 30)
            {
                Orion.CancelWaitTarget();
                Orion.Say('[drink GreaterHealPotion');
                Orion.Wait(300);
            }
        }

        while (Player.Poisoned())
        {
            Orion.CancelWaitTarget();
            Orion.CancelTarget();
            if (reagID.length)
            {
                Orion.WarMode(true);
                Orion.Wait(100);
                Orion.WarMode(false);
                Orion.Cast('Cure', self);
                Orion.Wait(1500);
            }
        }
        if (Player.Hits() < 30)
        {
            Orion.Say('[drink GreaterHealPotion');
            Orion.Wait(500);

            if (reagID.length)
            {
                if (!Orion.TimerExists('Provok'))
                {
                    Orion.SetTimer('Provok', 0);
                }
                if (Orion.Timer('Provok') > 4500)
                {
                    Provok();
                    Orion.SetTimer('Provok', 0);
                }
                Orion.WarMode(true);
                Orion.Wait(100);
                Orion.WarMode(false);
                Orion.CancelWaitTarget();
                Orion.CancelTarget();
                Orion.Cast('Heal', self);

            }
            Orion.Wait(2000);
        }

        if (Player.Hits() < 90)
        {

            if (reagID.length)
            {
                if (!Orion.TimerExists('Provok'))
                {
                    Orion.SetTimer('Provok', 0);
                }
                if (Orion.Timer('Provok') > 4500)
                {
                    Provok();
                    Orion.SetTimer('Provok', 0);
                }
                Orion.WarMode(true);
                Orion.Wait(100);
                Orion.WarMode(false);
                Orion.CancelWaitTarget();
                Orion.CancelTarget();
                Orion.Cast('Heal', self);

            }
            Orion.Wait(1000);
        }

        if (Orion.GetDistance(petOne.Serial()) > 8 && Orion.GetDistance(petTwo.Serial()) > 8)
        {
            while (Orion.GetDistance(petOne.Serial()) > 1 && Orion.GetDistance(petTwo.Serial()) > 1)
            {
                Orion.Say('all follow me');

                if (Player.Hits() < 90)
                {
                    Orion.CancelWaitTarget();
                    Orion.CancelTarget();

                    if (reagID.length)
                    {
                        Orion.WarMode(true);
                        Orion.Wait(100);
                        Orion.WarMode(false);
                        Orion.Cast('Heal', self);
                        if (!Orion.TimerExists('Provok'))
                        {
                            Orion.SetTimer('Provok', 0);
                        }
                        if (Orion.Timer('Provok') > 5000)
                        {
                            Provok();
                            Orion.SetTimer('Provok', 0);
                        }
                    }

                }
                Orion.Wait(1000);
            }
            Orion.Say('all guard me');
            Orion.SetTimer('Guard', 0);
        }

        if (Orion.Timer('Guard') > 20000)
        {
            Orion.CancelWaitTarget();
            Orion.CancelTarget();
            Orion.Say('all guard me');
            Orion.SetTimer('Guard', 0);
        }
        if (Orion.Timer('Protect') > 200000)
        {
            Orion.CancelWaitTarget();
            Orion.CancelTarget();
            if (reagID.length)
            {
                Orion.Cast('Magic Reflection', self);;
                Orion.SetTimer('Protect', 0);
            }
        }
        Orion.Wait(100);
    }
}


/**
 * Description
 * @method Provok
 * @param {} _private
 * @return 
 */
function Provok(_private)
{
    Orion.CancelWaitTarget();
    Orion.IgnoreReset();
    Orion.Ignore(self, true);
    var msg = "instrument|start|too far away from each other";
    var msg1 = "instrument";
    var msg2 = "start";
    var msg3 = "too far away from each other";
    var music = Orion.FindType('0x2805|0x0E9D|0x0E9C|0x0EB3|0x0EB2|0x0EB1|0x0E9E', '-1', backpack);
    var monster = Orion.FindType('!0x0190|!0x0191|!0x00E8', '0xFFFF', ground, 'near|mobile|ignorefriends',
        '6', 'gray|red|criminal|enemy');

    if (!music.length)
    {
        Orion.Print(33, '  NO Instruments in backpack ');
        Orion.Wait(1000)
        return;
    }
    Orion.RemoveObject('Instrument');
    Orion.AddObject("Instrument", music[0]);

    if (!monster.length)
    {
        return;
    }
    if (monster.length)
    {
        Orion.CharPrint(monster, 63, '*');
        target = monster[0];
        Orion.Ignore(target, true);
        monster2 = Orion.FindType('!0x0190|!0x0191|!0x00E8', '0xFFFF', ground, 'near|mobile|ignorefriends',
            '10', 'gray|red|criminal|enemy');
        if (!monster2.length)
        {
            Orion.IgnoreReset();

            return;
        }
        Orion.RemoveObject("target2");
        Orion.AddObject("target2", monster2[0]);
        var target2 = Orion.FindObject("target2");
        Orion.CharPrint(monster2, 63, '*');
        Orion.WaitTargetObject([monster2[0], target]);
    }
    Orion.ClearJournal(msg);
    Orion.UseSkill('Provocation');
    Orion.Wait(700);

    if (Orion.InJournal(msg2, 'sys|my'))
    {
        Orion.CharPrint(self, 63, '[provok]');
        Orion.Ignore(target2, true)

    }
    if (Orion.InJournal(msg3, 'sys'))
    {
        return;
    }
    if (Orion.InJournal(msg1, 'sys'))
    {
        Orion.UseObject('Instrument');
        Orion.Wait(600);
        return;
    }
    Orion.Wait(100);
}


/**
 * Description
 * @method AutoHeal
 * @return 
 */
function AutoHeal()
{
    while (true)
    {
        if (Player.Hits() < 99)
        {
            Orion.Print('Юзаю Бинт');
            Orion.BandageSelf()
            Orion.Wait(500);
            for (var i = 0; i < 5; i++)
            {
                Orion.Print(200 * i / 10 + ' %');
                Orion.Wait(2000);
            }
            Orion.Wait(100);
        }
        Orion.Wait(100);
    }
}

/**
 * Description
 * @method train_Stealth
 * @return 
 */
function train_Stealth()
{
    var value = Orion.SkillValue('Hiding');
    while (value < 1000)
    {
        if (!Player.Hidden())
        {
            Orion.UseSkill('Hiding');
            Orion.Wait(11000);
        }
        if (Player.Hidden())
        {
            Orion.UseSkill('Hiding');
            Orion.Wait(11000);
        }
        Orion.Wait(300);
    }
}


/**
 * Description
 * @method addenemyauto
 * @return 
 */
function addenemyauto()
{
    while (!Player.Dead())
    {
        var serial = Orion.GetSerial('lastattack');
        var obj = Orion.FindObject(serial);
        Orion.AddObject('enemy', obj);
        Orion.Wait(500);
    }
    Orion.Wait(100);
}




/**
 * Description
 * @method mMagicarrow
 * @return 
 */
function mMagicarrow()
{
    Orion.Cast('Magic Arrow');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(430);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}


/**
 * Description
 * @method mweaken
 * @return 
 */
function mweaken()
{
    Orion.Cast('Weaken');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(430);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method mcurse
 * @return 
 */
function mcurse()
{
    Orion.Cast('Curse');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(870);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}



/**
 * Description
 * @method mparalyze
 * @return 
 */
function mparalyze()
{
    Orion.Cast('Paralyze');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(915);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method menbolt
 * @return 
 */
function menbolt()
{
    Orion.Cast('Energy Bolt');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(980);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}


/**
 * Description
 * @method mdispel
 * @return 
 */
function mdispel()
{
    Orion.Cast('Dispel');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(980);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method mmindblast
 * @return 
 */
function mmindblast()
{
    Orion.Cast('Mind Blast');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(920);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method mflamestrike
 * @return 
 */
function mflamestrike()
{
    Orion.Cast('Flame Strike');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(1080);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method mchainlightning
 * @return 
 */
function mchainlightning()
{
    Orion.Cast('Chain Lightning');
    Orion.WaitTargetObject('self');
    Orion.Wait(1080);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}


/**
 * Description
 * @method mmeteor
 * @return 
 */
function mmeteor()
{
    Orion.Cast('Meteor Swarm');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(1080);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method mteleportlast
 * @return 
 */
function mteleportlast()
{
    Orion.Cast('Teleport');
    Orion.WaitTargetObject('enemy');
    Orion.Wait(1445);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method mteleport
 * @return 
 */
function mteleport()
{
    Orion.Cast('Teleport');
    Orion.Wait(1445);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method teleauto
 * @return 
 */
function teleauto()
{
    var value = 12;
    var empty = 0;

    var offset = [
        [empty, -value], //direction = 0
        [value, -value], //direction = 1
        [value, empty], //direction = 2
        [value, value], //direction = 3
        [empty, value], //direction = 4
        [-value, value], //direction = 5
        [-value, empty], //direction = 6
        [-value, -value] //direction = 7
    ];

    var xy = offset[Player.Direction() & 5];
    Orion.WaitTargetTileRelative('0', xy[0], xy[1], Player.Z());
    Orion.Cast('Teleport');
    Orion.Wait(1445);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}



/**
 * Description
 * @method mshift
 * @return 
 */
function mshift()
{
    Orion.Say(".cast 83");
    Orion.WaitTargetObject('enemy');
    Orion.Wait(760);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method mwyvern
 * @return 
 */
function mwyvern()
{
    Orion.Say(".cast 76");
    Orion.WaitTargetObject('enemy');
    Orion.Wait(1365);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method mabyss
 * @return 
 */
function mabyss()
{
    Orion.Say(".cast 69");
    Orion.WaitTargetObject('enemy');
    Orion.Wait(1090);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method mClight
 * @return 
 */
function mClight()
{
    Orion.Say(".cast 85");
    Orion.WaitTargetObject('enemy');
    Orion.Wait(980);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method mGust
 * @return 
 */
function mGust()
{
    Orion.Say(".cast 89");
    Orion.WaitTargetObject('enemy');
    Orion.Wait(1365);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}

/**
 * Description
 * @method msorc
 * @return 
 */
function msorc()
{
    Orion.Say(".cast 73");
    Orion.WaitTargetObject('enemy');
    Orion.Wait(1365);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}


/**
 * Description
 * @method mIcestrike
 * @return 
 */
function mIcestrike()
{
    Orion.Say(".cast 92");
    Orion.WaitTargetObject('enemy');
    Orion.Wait(1640);
    Orion.BlockMoving(true);
    Orion.Wait(300);
    Orion.BlockMoving(false);
}


/**
 * Description
 * @method teleportlasttarget
 * @return 
 */
function teleportlasttarget()
{
    Orion.Cast("Teleport");
    Orion.WaitTargetObject('enemy');
    Orion.Wait(1275);
    Orion.BlockMoving(true);
    Orion.Wait(370);
    Orion.BlockMoving(false);
}
