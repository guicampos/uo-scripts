// Execute tripleslash
/**
 * Description
 * @method TripleSlash
 * @return 
 */
function TripleSlash()
{
    if (Orion.WaitForGump(1000))
    {
        var gump0 = Orion.GetGump('last');
        if ((gump0 !== null) && (!gump0.Replayed()) && (gump0.ID() === '0x7EC42F38'))
        {
            gump0.Select(Orion.CreateGumpHook(1000));
            Orion.Wait(100);
        }
    }
}

// start or stop the spells casters
/**
 * Description
 * @method run_buffs_loop
 * @return 
 */
function run_buffs_loop()
{
    var loop = Orion.GetGlobal('loopon')
    if (loop == null || loop == 0)
    {
        Orion.SetGlobal('loopon', 1)
        Orion.Exec('Consecrate')
        Orion.Wait(1500)
        Orion.Exec('CurseWep')
    }
    else
    {
        Orion.SetGlobal('loopon', 0)
        Orion.Terminate('all')
    }
}

/**
 * Description
 * @method Consecrate
 * @return 
 */
function Consecrate()
{
    while (!Player.Dead())
    {
        Orion.Cast('Consecrate Weapon')
        Orion.Wait(10000)
    }
}

/**
 * Description
 * @method CurseWep
 * @return 
 */
function CurseWep()
{
    while (!Player.Dead())
    {
        Orion.Cast('Curse Weapon')
        Orion.Wait(35000)
    }
}

// Lightning strike with auto honor
/**
 * Description
 * @method LightningStrikeWH
 * @return 
 */
function LightningStrikeWH()
{
    if (Orion.ScriptRunning('AutoWhirlwind') > 0)
    {
        Orion.ToggleScript('AutoWhirlwind')
    }
    var Honored = []
    while (true)
    {
        var Enemy = Orion.FindTypeEx('any', 'any', 'ground', 'mobile | live | near | ignorefriends', '11',
            'gray | enemy | red | criminal')
        if (Enemy.length > 0)
        {
            var FindEnemy = Enemy[0].Serial();
            var idx = Honored.indexOf(Enemy[0].Serial());
            if (Enemy[0].Hits() == Enemy[0].MaxHits() && idx == -1)
            {
                Orion.InvokeVirtue('Honor')
                Orion.WaitTargetObject(Enemy[0].Serial())
                Honored.push(Enemy[0].Serial())
            }
            Orion.Attack(Enemy[0].Serial())
        }
        if (!Orion.SpellStatus('Lightning Strike'))
        {
            Orion.Cast('Lightning Strike')
        }
        Orion.Wait(200)
    }
}

// Lightning strike 
/**
 * Description
 * @method LightningStrike
 * @return 
 */
function LightningStrike()
{
    if (Orion.ScriptRunning('AutoWhirlwind') > 0)
    {
        Orion.ToggleScript('AutoWhirlwind')
    }
    while (true)
    {
        var Enemy = Orion.FindTypeEx('any', 'any', 'ground', 'mobile | live | near | ignorefriends', '11',
            'gray | enemy | red | criminal')
        if (Enemy.length > 0)
        {
            Orion.Attack(Enemy[0].Serial())
        }
        if (!Orion.SpellStatus('Lightning Strike'))
        {
            Orion.Cast('Lightning Strike')
        }
        Orion.Wait(200)
    }
}

//casts whirlwind
/**
 * Description
 * @method AutoWhirlwind
 * @return 
 */
function AutoWhirlwind()
{
    if (Orion.ScriptRunning('LightningStrike') > 0)
    {
        Orion.ToggleScript('LightningStrike')
    }
    while (true)
    {
        var enemy = Orion.FindType('any', 'any', 'ground', 'mobile | live | near | ignorefriends', '11',
            'gray | enemy | red | criminal')
        Orion.Attack(enemy[0])
        if (Orion.AbilityStatus('Secondary') != true)
        {
            Orion.UseAbility('Secondary')
        }
        Orion.Wait(100)
    }
}

//unequip your main weapon
/**
 * Description
 * @method UnequipWeapon
 * @return 
 */
function UnequipWeapon()
{
    Orion.Unequip('RightHand')
}
