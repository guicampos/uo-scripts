//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////
//Функция вырубки, задаем параметры

//Всегда бегать?
Orion.OptionAlwaysRun(true);

//Дистанция поиска деревьев
var maxSearchDistance=20; //меняем дистанцию поиска

//Тип топора
var axe = '0x0F4B';


//////////////////////////////////////////////////////////////////////////////////////
//Функция вырубки
function CutTreeByWorldLoc()
{
Orion.ClearJournal();
var treeWorldLocation = FindTreesInSurrArea();
for(i=0;i<treeWorldLocation.length;i++){
Orion.Print('Chopping tree. ' + (treeWorldLocation.length - i) +' trees left to chop. ');
Orion.RequestContextMenu('0x47C25209');
Orion.WaitContextMenuID('0x47C25209', 2);
	if (Orion.WaitForGump(1000))
	{
		var gump0 = Orion.GetGump('last');
		if ((gump0 !== null) && (!gump0.Replayed()) && (gump0.ID() === '0x06ABCE12'))
		{
			gump0.Select(Orion.CreateGumpHook(0));
			Orion.Wait(100);
		}
	}
Orion.Wait(500);
Orion.WalkTo(treeWorldLocation[i][0],treeWorldLocation[i][1],0);
Orion.Wait(2000);
Orion.UseType(axe); //тип топора

Orion.WaitTargetTile('tree',treeWorldLocation[i][0],treeWorldLocation[i][1],0);
Orion.Wait(2000);

        var mobs = Orion.FindEnemy('near|mobile',  '2', 'gray|criminal|red'); 
        if (mobs.length)
	        Orion.Exec("init_combat_mode", true)

if(Orion.InJournal('in your backpack|but fail to produce', 'sys')){
LumberAgain(treeWorldLocation[i][0],treeWorldLocation[i][1]);
}
}
}
//////////////////////////////////////////////////////////////////////////////////////
//Функция поиска деревьев
function FindTreesInSurrArea()
{
var treeWorldLocations=createArr(400,400);
var trueWorldLocCounter=0;

for(i=(Player.X()-maxSearchDistance);i<(Player.X()+maxSearchDistance+1);i++){
for(j=(Player.Y()-maxSearchDistance);j<(Player.Y()+maxSearchDistance+0);j++){
//Orion.Print("Searching X= " + i + "and Y= " + j + " location");
if(Orion.ValidateTargetTile('tree', i, j)){
Orion.Print("Found a tree, location is saved as " + (trueWorldLocCounter+1));
treeWorldLocations[trueWorldLocCounter][0]=i;
treeWorldLocations[trueWorldLocCounter][1]=j;
trueWorldLocCounter++;
}
}
}
treeWorldLocations.length=trueWorldLocCounter;
return treeWorldLocations;
}

function createArr(x, y) {
var arr = new Array(x);

for (var i = 0; i < x; i++) {
arr[i] = new Array(y);
}
return arr;
}

function LumberAgain(x,y)
{
var text = 'wood here to harvest|no logs|have been destroer|too far away|You can';
while (!Player.Dead()){
Orion.RequestContextMenu('0x47C25209');
Orion.WaitContextMenuID('0x47C25209', 2);
	if (Orion.WaitForGump(1000))
	{
		var gump0 = Orion.GetGump('last');
		if ((gump0 !== null) && (!gump0.Replayed()) && (gump0.ID() === '0x06ABCE12'))
		{
			gump0.Select(Orion.CreateGumpHook(0));
			Orion.Wait(100);
		}
	}
Orion.UseType(axe); //тип топора

Orion.WaitTargetTile('tree',x,y,0);
var msg = Orion.WaitJournal(text, Orion.Now(), Orion.Now() + 5000, 'sys|my');
if(msg !=null) break;
Orion.Wait(1000);
}
Orion.ClearJournal();
}